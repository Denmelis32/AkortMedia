// lib/pages/articles_page.dart
import 'dart:ui';

import 'package:flutter/material.dart';
import 'article_detail_page.dart';

// –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç—å–∏
class Article {
  final String id;
  final String title;
  final String description;
  final String emoji;
  final String content;
  final int views;
  final int likes;
  final DateTime publishDate;
  final String category;
  final String author;
  final String imageUrl; // –î–æ–±–∞–≤–∏–º –ø–æ–ª–µ –¥–ª—è URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è

  Article({
    required this.id,
    required this.title,
    required this.description,
    required this.emoji,
    required this.content,
    required this.views,
    required this.likes,
    required this.publishDate,
    required this.category,
    required this.author,
    required this.imageUrl, // –î–æ–±–∞–≤–∏–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
  });

  String get formattedDate {
    final now = DateTime.now();
    final difference = now.difference(publishDate);

    if (difference.inDays > 365) {
      return '${(difference.inDays / 365).floor()}–≥ –Ω–∞–∑–∞–¥';
    } else if (difference.inDays > 30) {
      return '${(difference.inDays / 30).floor()}–º–µ—Å –Ω–∞–∑–∞–¥';
    } else if (difference.inDays > 0) {
      return '${difference.inDays}–¥ –Ω–∞–∑–∞–¥';
    } else if (difference.inHours > 0) {
      return '${difference.inHours}—á –Ω–∞–∑–∞–¥';
    } else {
      return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    }
  }
}

class ArticlesPage extends StatefulWidget {
  final String userName;
  final String userEmail;
  final VoidCallback onLogout;

  const ArticlesPage({
    super.key,
    required this.userName,
    required this.userEmail,
    required this.onLogout,
  });

  @override
  State<ArticlesPage> createState() => _ArticlesPageState();
}

class _ArticlesPageState extends State<ArticlesPage> {
  final List<Article> _articles = [
    Article(
      id: '1',
      title: '–¢–∞–∫—Ç–∏–∫–∞ –∏–≥—Ä—ã –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏',
      description: '–ê–Ω–∞–ª–∏–∑ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã –≤ —Å–µ–∑–æ–Ω–µ 2024/2025',
      emoji: 'üìä',
      content: '''
# –¢–∞–∫—Ç–∏–∫–∞ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã

## –í–≤–µ–¥–µ–Ω–∏–µ
–ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Ñ—É—Ç–±–æ–ª–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–∞—Ç–æ—Ä—Å–∫–∏–º —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ—à–µ–Ω–∏—è–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã. –í —Å–µ–∑–æ–Ω–µ 2024/2025 –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

## –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ö–µ–º–∞
–ì–≤–∞—Ä–¥–∏–æ–ª–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±–∫—É—é —Å—Ö–µ–º—É 4-3-3, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ 3-2-4-1 –ø—Ä–∏ –∞—Ç–∞–∫–µ. –ó–∞–¥–Ω–∏–µ –∑–∞—â–∏—Ç–Ω–∏–∫–∏ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä, –ø–æ–∑–≤–æ–ª—è—è –∫—Ä–∞–π–Ω–∏–º –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –≤—ã—Å–æ–∫–æ –ø–æ —Ñ–ª–∞–Ω–≥–∞–º.

## –ö–ª—é—á–µ–≤—ã–µ innovations
- **–ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–∞—Ç–µ—Ä–∞–ª–∏**: –ö–∞–º–≤–∏–Ω –∏ –£–æ–∫–µ—Ä —á–∞—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä –ø–æ–ª—è
- **–õ–æ–∂–Ω–∞—è –¥–µ–≤—è—Ç–∫–∞**: –•–æ–ª–∞–Ω–Ω–¥ –æ—Ç—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é –ø–ª–µ–π–º–µ–π–∫–µ—Ä–∞
- **–í—ã—Å–æ–∫–∏–π –ø—Ä–µ—Å—Å–∏–Ω–≥**: –ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∞–≤–∏—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ—Ç–µ—Ä–∏ –º—è—á–∞

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
–¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –≥–∏–±–∫–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–º –∫–æ–∑—ã—Ä–µ–º –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –≤ –±–æ—Ä—å–±–µ –∑–∞ —Ç–∏—Ç—É–ª—ã.
''',
      views: 1250,
      likes: 345,
      publishDate: DateTime.now().subtract(const Duration(days: 2)),
      category: '–¢–∞–∫—Ç–∏–∫–∞',
      author: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
      imageUrl: 'https://images.unsplash.com/photo-1596510913920-85d87a1800d2?w=500&h=300&fit=crop',
    ),
    Article(
      id: '2',
      title: '–õ—É—á—à–∏–µ –º–æ–ª–æ–¥—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã',
      description: '–û–±–∑–æ—Ä —Å–∞–º—ã—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–ª–æ–¥—ã—Ö —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤ –ï–≤—Ä–æ–ø—ã',
      emoji: '‚≠ê',
      content: '''
# –õ—É—á—à–∏–µ –º–æ–ª–æ–¥—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã –ï–≤—Ä–æ–ø—ã 2024

## 1. –î–∂—É–¥ –ë–µ–ª–ª–∏–Ω–≥–µ–º (–†–µ–∞–ª –ú–∞–¥—Ä–∏–¥)
–í –≤–æ–∑—Ä–∞—Å—Ç–µ 20 –ª–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ—Ä–∞–∂–∞—Ç—å —Å–≤–æ–µ–π –∑—Ä–µ–ª–æ—Å—Ç—å—é –∏ –≤–ª–∏—è–Ω–∏–µ–º –Ω–∞ –∏–≥—Ä—É.

## 2. –î–∂–µ—Ä–µ–º–∏ –î–æ–∫—É (–ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏)
–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π –≤–∏–Ω–≥–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –¥—Ä–∏–±–ª–∏–Ω–≥.

## 3. –ì–∞–≤–∏ (–ë–∞—Ä—Å–µ–ª–æ–Ω–∞)
–ò—Å–ø–∞–Ω—Å–∫–∏–π –≤—É–Ω–¥–µ—Ä–∫–∏–Ω–¥ —É–∂–µ —Å—Ç–∞–ª –∫–ª—é—á–µ–≤—ã–º –∏–≥—Ä–æ–∫–æ–º –≤ –ë–∞—Ä—Å–µ–ª–æ–Ω–µ –∏ —Å–±–æ—Ä–Ω–æ–π –ò—Å–ø–∞–Ω–∏–∏.

## –í—ã–≤–æ–¥—ã
–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Ñ—É—Ç–±–æ–ª –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–æ–∂–¥–∞—Ç—å —Ç–∞–ª–∞–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω—É—Ç –Ω–æ–≤—ã–º–∏ —Å—É–ø–µ—Ä–∑–≤–µ–∑–¥–∞–º–∏.
''',
      views: 980,
      likes: 267,
      publishDate: DateTime.now().subtract(const Duration(days: 5)),
      category: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
      author: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
      imageUrl: 'https://images.unsplash.com/photo-1575446913068-df1c1c22786a?w=500&h=300&fit=crop',
    ),
    Article(
      id: '3',
      title: '–ò—Å—Ç–æ—Ä–∏—è –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤',
      description: '–û—Ç –∏—Å—Ç–æ–∫–æ–≤ –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π –≤–µ–ª–∏–∫–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞',
      emoji: 'üèÜ',
      content: '''
# –ò—Å—Ç–æ—Ä–∏—è –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤ –£–ï–§–ê

## –†–∞–Ω–Ω–∏–µ –≥–æ–¥—ã
–¢—É—Ä–Ω–∏—Ä –±—ã–ª –æ—Å–Ω–æ–≤–∞–Ω –≤ 1955 –≥–æ–¥—É –∫–∞–∫ –ö—É–±–æ–∫ –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –ß–µ–º–ø–∏–æ–Ω–æ–≤. –ü–µ—Ä–≤—ã–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º —Å—Ç–∞–ª –º–∞–¥—Ä–∏–¥—Å–∫–∏–π –†–µ–∞–ª.

## –≠—Ä–∞ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
- **1950-1960**: –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –†–µ–∞–ª –ú–∞–¥—Ä–∏–¥–∞ (5 –ø–æ–¥—Ä—è–¥ —Ç–∏—Ç—É–ª–æ–≤)
- **1970-–µ**: –£—Å–ø–µ—Ö–∏ –∞—è–∫—Å–æ–≤ –∏ –ë–∞–≤–∞—Ä–∏–∏
- **1980-–µ**: –†–∞—Å—Ü–≤–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –∫–ª—É–±–æ–≤

## –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —ç—Ä–∞
–° 1992 –≥–æ–¥–∞ —Ç—É—Ä–Ω–∏—Ä –±—ã–ª —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω –≤ –õ–∏–≥—É –ß–µ–º–ø–∏–æ–Ω–æ–≤, —á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∫–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

## –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
–ó–∞–±—ã—Ç—ã–π –≥–æ–ª –ó–∏–¥–∞–Ω–∞ –≤ —Ñ–∏–Ω–∞–ª–µ 2002 –≥–æ–¥–∞, –∫–∞–º–±—ç–∫ –õ–∏–≤–µ—Ä–ø—É–ª—è –≤ 2005 –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ.
''',
      views: 1560,
      likes: 423,
      publishDate: DateTime.now().subtract(const Duration(days: 1)),
      category: '–ò—Å—Ç–æ—Ä–∏—è',
      author: '–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤',
      imageUrl: 'https://images.unsplash.com/photo-1529900748604-07564a03e7a6?w=500&h=300&fit=crop',
    ),
    Article(
      id: '4',
      title: '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏',
      description: '–°–∞–º—ã–µ –≥—Ä–æ–º–∫–∏–µ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä—ã –ª–µ—Ç–Ω–µ–≥–æ –æ–∫–Ω–∞ 2024',
      emoji: 'üî•',
      content: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä–∞—Ö...',
      views: 890,
      likes: 210,
      publishDate: DateTime.now().subtract(const Duration(days: 3)),
      category: '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã',
      author: '–ü–µ—Ç—Ä –ù–∏–∫–æ–ª–∞–µ–≤',
      imageUrl: 'https://images.unsplash.com/photo-1461896836934-ffe607ba8211?w=500&h=300&fit=crop',
    ),
  ];

  final List<String> _categories = [
    '–¢–∞–∫—Ç–∏–∫–∞',
    '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    '–ò—Å—Ç–æ—Ä–∏—è',
    '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã',
    '–û–±–∑–æ—Ä—ã –º–∞—Ç—á–µ–π',
    '–ò–Ω—Ç–µ—Ä–≤—å—é'
  ];

  final List<String> _emojis = ['üìä', '‚≠ê', 'üèÜ', '‚öΩ', 'üëë', 'üî•', 'üéØ', 'üí´'];

  // –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  final TextEditingController _searchController = TextEditingController();
  String _searchQuery = '';
  String _selectedCategory = '–í—Å–µ';

  void _openArticleDetail(Article article) {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => ArticleDetailPage(article: article),
      ),
    );
  }

  void _showAddArticleDialog() {
    showDialog(
      context: context,
      builder: (context) => AddArticleDialog(
        categories: _categories,
        emojis: _emojis,
        onArticleAdded: (newArticle) {
          setState(() {
            _articles.insert(0, newArticle);
          });
        },
        userName: widget.userName,
      ),
    );
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π
  List<Article> get _filteredArticles {
    return _articles.where((article) {
      final matchesSearch = _searchQuery.isEmpty ||
          article.title.toLowerCase().contains(_searchQuery.toLowerCase()) ||
          article.description.toLowerCase().contains(_searchQuery.toLowerCase());

      final matchesCategory = _selectedCategory == '–í—Å–µ' ||
          article.category == _selectedCategory;

      return matchesSearch && matchesCategory;
    }).toList();
  }

  void _showFilterBottomSheet() {
    showModalBottomSheet(
      context: context,
      backgroundColor: Colors.transparent,
      builder: (context) => Container(
        decoration: BoxDecoration(
          color: Theme.of(context).colorScheme.surface,
          borderRadius: BorderRadius.only(
            topLeft: Radius.circular(24),
            topRight: Radius.circular(24),
          ),
        ),
        padding: EdgeInsets.all(24),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Center(
              child: Container(
                width: 40,
                height: 4,
                decoration: BoxDecoration(
                  color: Colors.grey[300],
                  borderRadius: BorderRadius.circular(2),
                ),
              ),
            ),
            SizedBox(height: 16),
            Text('–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.w600)),
            SizedBox(height: 20),
            Wrap(
              spacing: 12,
              runSpacing: 12,
              children: [
                _buildCategoryChip('–í—Å–µ'),
                ..._categories.map((category) => _buildCategoryChip(category)),
              ],
            ),
            SizedBox(height: 24),
          ],
        ),
      ),
    );
  }

  Widget _buildCategoryChip(String category) {
    final isSelected = _selectedCategory == category;
    return GestureDetector(
      onTap: () {
        setState(() {
          _selectedCategory = category;
        });
        Navigator.pop(context);
      },
      child: Container(
        padding: EdgeInsets.symmetric(horizontal: 20, vertical: 12),
        decoration: BoxDecoration(
          color: isSelected
              ? Theme.of(context).colorScheme.primary
              : Theme.of(context).colorScheme.surfaceVariant,
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: isSelected
                ? Theme.of(context).colorScheme.primary
                : Colors.grey[300]!,
            width: 1,
          ),
        ),
        child: Text(
          category,
          style: TextStyle(
            color: isSelected
                ? Colors.white
                : Theme.of(context).colorScheme.onSurfaceVariant,
            fontWeight: FontWeight.w500,
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      floatingActionButton: FloatingActionButton(
        onPressed: _showAddArticleDialog,
        child: Icon(Icons.add, size: 24),
        backgroundColor: Theme.of(context).colorScheme.primary,
        foregroundColor: Colors.white,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
        elevation: 4,
        tooltip: '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é',
      ),
      body: CustomScrollView(
        slivers: [
          SliverAppBar(
            expandedHeight: 180.0,
            floating: false,
            pinned: true,
            flexibleSpace: FlexibleSpaceBar(
              title: Text(
                '–§—É—Ç–±–æ–ª—å–Ω—ã–µ —Å—Ç–∞—Ç—å–∏',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 20.0,
                  fontWeight: FontWeight.w600,
                  shadows: [
                    Shadow(
                      color: Colors.black.withOpacity(0.3),
                      blurRadius: 4,
                      offset: Offset(0, 2),
                    ),
                  ],
                ),
              ),
              background: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                    colors: [
                      Color(0xFF007AFF),
                      Color(0xFF5856D6),
                    ],
                  ),
                ),
                child: Padding(
                  padding: const EdgeInsets.only(left: 24, bottom: 20),
                  child: Align(
                    alignment: Alignment.bottomLeft,
                    child: Text(
                      '–ü—Ä–∏–≤–µ—Ç, ${widget.userName}!',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 16,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ),
                ),
              ),
            ),
            actions: [
              IconButton(
                icon: Icon(Icons.filter_list_rounded, size: 24),
                onPressed: _showFilterBottomSheet,
                tooltip: '–§–∏–ª—å—Ç—Ä—ã',
              ),
              IconButton(
                icon: Icon(Icons.exit_to_app_rounded, size: 24),
                onPressed: widget.onLogout,
                tooltip: '–í—ã–π—Ç–∏',
              ),
            ],
          ),

          // –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
          SliverPadding(
            padding: EdgeInsets.all(20),
            sliver: SliverToBoxAdapter(
              child: Container(
                decoration: BoxDecoration(
                  borderRadius: BorderRadius.circular(14),
                  boxShadow: [
                    BoxShadow(
                      color: Colors.black.withOpacity(0.1),
                      blurRadius: 10,
                      offset: Offset(0, 4),
                    ),
                  ],
                ),
                child: TextField(
                  controller: _searchController,
                  decoration: InputDecoration(
                    hintText: '–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π...',
                    prefixIcon: Icon(Icons.search_rounded, size: 22),
                    suffixIcon: _searchQuery.isNotEmpty
                        ? IconButton(
                      icon: Icon(Icons.clear_rounded, size: 22),
                      onPressed: () {
                        setState(() {
                          _searchController.clear();
                          _searchQuery = '';
                        });
                      },
                    )
                        : null,
                    filled: true,
                    fillColor: Theme.of(context).colorScheme.surface,
                    border: OutlineInputBorder(
                      borderRadius: BorderRadius.circular(14),
                      borderSide: BorderSide.none,
                    ),
                    contentPadding: EdgeInsets.symmetric(vertical: 16, horizontal: 20),
                  ),
                  onChanged: (value) {
                    setState(() {
                      _searchQuery = value;
                    });
                  },
                ),
              ),
            ),
          ),

          // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤
          SliverToBoxAdapter(
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 20, vertical: 8),
              child: Wrap(
                spacing: 8,
                runSpacing: 8,
                children: [
                  if (_selectedCategory != '–í—Å–µ')
                    Container(
                      padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                      decoration: BoxDecoration(
                        color: Theme.of(context).colorScheme.primary.withOpacity(0.1),
                        borderRadius: BorderRadius.circular(12),
                        border: Border.all(
                          color: Theme.of(context).colorScheme.primary.withOpacity(0.3),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            '–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ',
                            style: TextStyle(
                              fontSize: 12,
                              color: Theme.of(context).colorScheme.onSurfaceVariant,
                            ),
                          ),
                          Text(
                            _selectedCategory,
                            style: TextStyle(
                              fontSize: 12,
                              fontWeight: FontWeight.w600,
                              color: Theme.of(context).colorScheme.primary,
                            ),
                          ),
                          SizedBox(width: 4),
                          GestureDetector(
                            onTap: () {
                              setState(() {
                                _selectedCategory = '–í—Å–µ';
                              });
                            },
                            child: Icon(Icons.close_rounded, size: 14),
                          ),
                        ],
                      ),
                    ),
                  if (_searchQuery.isNotEmpty)
                    Container(
                      padding: EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                      decoration: BoxDecoration(
                        color: Colors.green.withOpacity(0.1),
                        borderRadius: BorderRadius.circular(12),
                        border: Border.all(
                          color: Colors.green.withOpacity(0.3),
                          width: 1,
                        ),
                      ),
                      child: Row(
                        mainAxisSize: MainAxisSize.min,
                        children: [
                          Text(
                            '–ü–æ–∏—Å–∫: ',
                            style: TextStyle(
                              fontSize: 12,
                              color: Theme.of(context).colorScheme.onSurfaceVariant,
                            ),
                          ),
                          Text(
                            '"$_searchQuery"',
                            style: TextStyle(
                              fontSize: 12,
                              fontWeight: FontWeight.w600,
                              color: Colors.green[700],
                            ),
                          ),
                          SizedBox(width: 4),
                          GestureDetector(
                            onTap: () {
                              setState(() {
                                _searchController.clear();
                                _searchQuery = '';
                              });
                            },
                            child: Icon(Icons.close_rounded, size: 14),
                          ),
                        ],
                      ),
                    ),
                ],
              ),
            ),
          ),

          // –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç–µ–π –≤ –≤–∏–¥–µ —Å–µ—Ç–∫–∏ 2x2
          _filteredArticles.isEmpty
              ? SliverFillRemaining(
            child: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.article_rounded, size: 64, color: Colors.grey[400]),
                  SizedBox(height: 20),
                  Text(
                    '–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
                    style: TextStyle(
                      fontSize: 18,
                      fontWeight: FontWeight.w500,
                      color: Colors.grey[600],
                    ),
                  ),
                  SizedBox(height: 8),
                  Text(
                    '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞',
                    style: TextStyle(
                      color: Colors.grey[500],
                    ),
                  ),
                ],
              ),
            ),
          )
              : SliverPadding(
            padding: EdgeInsets.all(16),
            sliver: SliverGrid(
              gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(
                crossAxisCount: 2,
                crossAxisSpacing: 16,
                mainAxisSpacing: 16,
                childAspectRatio: 0.7,
              ),
              delegate: SliverChildBuilderDelegate(
                    (context, index) {
                  final article = _filteredArticles[index];
                  return _buildArticleCard(article);
                },
                childCount: _filteredArticles.length,
              ),
            ),
          ),
        ],
      ),
    );
  }
  Widget _buildArticleCard(Article article) {
    return MouseRegion(
      cursor: SystemMouseCursors.click,
      child: GestureDetector(
        onTap: () => _openArticleDetail(article),
        child: Container(
          decoration: BoxDecoration(
            color: Theme.of(context).colorScheme.surface,
            borderRadius: BorderRadius.circular(20),
            boxShadow: [
              BoxShadow(
                color: Colors.black.withOpacity(0.15),
                blurRadius: 20,
                offset: Offset(0, 8),
                spreadRadius: 0,
              ),
            ],
          ),
          child: ClipRRect(
            borderRadius: BorderRadius.circular(20),
            child: Column( // –ò–∑–º–µ–Ω–µ–Ω–æ —Å Stack –Ω–∞ Column
              children: [
                // –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º
                Container(
                  height: 140,
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: NetworkImage(article.imageUrl),
                      fit: BoxFit.cover,
                    ),
                  ),
                  child: Stack(
                    children: [
                      // –ì—Ä–∞–¥–∏–µ–Ω—Ç –ø–æ–≤–µ—Ä—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                      Container(
                        decoration: BoxDecoration(
                          gradient: LinearGradient(
                            begin: Alignment.topCenter,
                            end: Alignment.bottomCenter,
                            colors: [
                              Colors.transparent,
                              Colors.black.withOpacity(0.1),
                            ],
                          ),
                        ),
                      ),

                      // –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –ª–µ–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
                      Positioned(
                        top: 12,
                        left: 12,
                        child: Container(
                          padding: EdgeInsets.symmetric(horizontal: 10, vertical: 5),
                          decoration: BoxDecoration(
                            color: Theme.of(context).colorScheme.primary.withOpacity(0.85),
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Text(
                            article.category,
                            style: TextStyle(
                              color: Colors.white,
                              fontSize: 10,
                              fontWeight: FontWeight.w600,
                            ),
                          ),
                        ),
                      ),

                      // –≠–º–æ–¥–∑–∏ –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É
                      Positioned(
                        top: 12,
                        right: 12,
                        child: Container(
                          padding: EdgeInsets.all(6),
                          decoration: BoxDecoration(
                            color: Colors.black.withOpacity(0.5),
                            borderRadius: BorderRadius.circular(12),
                          ),
                          child: Text(
                            article.emoji,
                            style: TextStyle(fontSize: 16),
                          ),
                        ),
                      ),
                    ],
                  ),
                ),

                // –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
                Expanded( // –î–æ–±–∞–≤–ª–µ–Ω Expanded
                  child: Container(
                    padding: EdgeInsets.all(16),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                        Text(
                          article.title,
                          style: TextStyle(
                            fontSize: 16,
                            fontWeight: FontWeight.w700,
                            height: 1.3,
                            color: Theme.of(context).colorScheme.onSurface,
                          ),
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                        ),
                        SizedBox(height: 8),

                        // –û–ø–∏—Å–∞–Ω–∏–µ
                        Text(
                          article.description,
                          style: TextStyle(
                            fontSize: 12,
                            color: Theme.of(context).colorScheme.onSurface.withOpacity(0.7),
                            height: 1.4,
                          ),
                          maxLines: 2,
                          overflow: TextOverflow.ellipsis,
                        ),
                        SizedBox(height: 12),

                        // –†–µ–π—Ç–∏–Ω–≥ –∑–≤–µ–∑–¥–∞–º–∏
                        Row(
                          children: List.generate(5, (index) => Icon(
                            Icons.star,
                            size: 16,
                            color: index < 4 ? Colors.amber : Colors.grey[300],
                          )),
                        ),
                        Spacer(),
                        // –ê–≤—Ç–æ—Ä –∏ –¥–∞—Ç–∞
                        Row(
                          children: [
                            CircleAvatar(
                              radius: 12,
                              backgroundColor: Theme.of(context).colorScheme.primary,
                              child: Text(
                                article.author[0],
                                style: TextStyle(
                                  fontSize: 10,
                                  fontWeight: FontWeight.w600,
                                  color: Colors.white,
                                ),
                              ),
                            ),
                            SizedBox(width: 8),
                            Expanded(
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    article.author,
                                    style: TextStyle(
                                      fontSize: 11,
                                      fontWeight: FontWeight.w500,
                                    ),
                                    overflow: TextOverflow.ellipsis,
                                  ),
                                  Text(
                                    article.formattedDate,
                                    style: TextStyle(
                                      fontSize: 10,
                                      color: Theme.of(context).colorScheme.onSurface.withOpacity(0.5),
                                    ),
                                  ),
                                ],
                              ),
                            ),
                          ],
                        ),
                        SizedBox(height: 8),

                        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            _buildStatItem(Icons.remove_red_eye_outlined, article.views.toString()),
                            _buildStatItem(Icons.favorite_outline_rounded, article.likes.toString()),
                            _buildStatItem(Icons.chat_bubble_outline_rounded, '12'),
                          ],
                        ),
                      ],
                    ),
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildStatItem(IconData icon, String text) {
    return Row(
      children: [
        Icon(
          icon,
          size: 12,
          color: Theme.of(context).colorScheme.onSurface.withOpacity(0.5),
        ),
        SizedBox(width: 4),
        Text(
          text,
          style: TextStyle(
            fontSize: 11,
            fontWeight: FontWeight.w500,
            color: Theme.of(context).colorScheme.onSurface.withOpacity(0.7),
          ),
        ),
      ],
    );
  }
}

// –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ (AddArticleDialog) –æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
// ...
// –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ lib/pages/articles_page.dart

// –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
class AddArticleDialog extends StatefulWidget {
  final List<String> categories;
  final List<String> emojis;
  final Function(Article) onArticleAdded;
  final String userName;

  const AddArticleDialog({
    super.key,
    required this.categories,
    required this.emojis,
    required this.onArticleAdded,
    required this.userName,
  });

  @override
  State<AddArticleDialog> createState() => _AddArticleDialogState();
}

class _AddArticleDialogState extends State<AddArticleDialog> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _descriptionController = TextEditingController();
  final TextEditingController _contentController = TextEditingController();
  final TextEditingController _imageUrlController = TextEditingController();

  String _selectedCategory = '–¢–∞–∫—Ç–∏–∫–∞';
  String _selectedEmoji = 'üìä';
  int _charCount = 0;

  @override
  void initState() {
    super.initState();
    // –£—Å—Ç–∞–Ω–æ–≤–∏–º —Å–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    _imageUrlController.text = 'https://images.unsplash.com/photo-1552667466-07770ae110d0?w=500&h=300&fit=crop';
  }

  @override
  Widget build(BuildContext context) {
    return Dialog(
      insetPadding: EdgeInsets.all(20),
      backgroundColor: Colors.transparent,
      child: Container(
        decoration: BoxDecoration(
          color: Theme.of(context).colorScheme.surface,
          borderRadius: BorderRadius.circular(24),
          boxShadow: [
            BoxShadow(
              color: Colors.black.withOpacity(0.2),
              blurRadius: 30,
              offset: Offset(0, 10),
            ),
          ],
        ),
        child: Padding(
          padding: EdgeInsets.all(24),
          child: Form(
            key: _formKey,
            child: SingleChildScrollView(
              child: Column(
                mainAxisSize: MainAxisSize.min,
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  Center(
                    child: Container(
                      width: 40,
                      height: 4,
                      decoration: BoxDecoration(
                        color: Colors.grey[300],
                        borderRadius: BorderRadius.circular(2),
                      ),
                    ),
                  ),
                  SizedBox(height: 16),
                  Text(
                    '–ù–æ–≤–∞—è —Å—Ç–∞—Ç—å—è',
                    style: TextStyle(
                      fontSize: 24,
                      fontWeight: FontWeight.w700,
                      color: Theme.of(context).colorScheme.onSurface,
                    ),
                  ),
                  SizedBox(height: 20),

                  // –≠–º–æ–¥–∑–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
                  Row(
                    children: [
                      Container(
                        padding: EdgeInsets.all(12),
                        decoration: BoxDecoration(
                          color: Colors.grey.withOpacity(0.1),
                          borderRadius: BorderRadius.circular(16),
                        ),
                        child: DropdownButton<String>(
                          value: _selectedEmoji,
                          items: widget.emojis.map((emoji) {
                            return DropdownMenuItem(
                              value: emoji,
                              child: Text(emoji, style: TextStyle(fontSize: 24)),
                            );
                          }).toList(),
                          onChanged: (value) {
                            setState(() {
                              _selectedEmoji = value!;
                            });
                          },
                          underline: Container(),
                          icon: Icon(Icons.arrow_drop_down_rounded),
                        ),
                      ),
                      SizedBox(width: 16),
                      Expanded(
                        child: Container(
                          decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(16),
                            border: Border.all(
                              color: Colors.grey.withOpacity(0.3),
                              width: 1,
                            ),
                          ),
                          child: Padding(
                            padding: EdgeInsets.symmetric(horizontal: 16),
                            child: DropdownButtonFormField<String>(
                              value: _selectedCategory,
                              items: widget.categories.map((category) {
                                return DropdownMenuItem(
                                  value: category,
                                  child: Text(
                                    category,
                                    style: TextStyle(fontSize: 16),
                                  ),
                                );
                              }).toList(),
                              onChanged: (value) {
                                setState(() {
                                  _selectedCategory = value!;
                                });
                              },
                              decoration: InputDecoration(
                                border: InputBorder.none,
                                labelText: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
                              ),
                              style: TextStyle(fontSize: 16),
                            ),
                          ),
                        ),
                      ),
                    ],
                  ),
                  SizedBox(height: 20),

                  // URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                  TextFormField(
                    controller: _imageUrlController,
                    decoration: InputDecoration(
                      labelText: 'URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                        borderSide: BorderSide(
                          color: Colors.grey.withOpacity(0.3),
                          width: 1,
                        ),
                      ),
                      contentPadding: EdgeInsets.all(16),
                    ),
                    style: TextStyle(fontSize: 16),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return '–í–≤–µ–¥–∏—Ç–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è';
                      }
                      return null;
                    },
                  ),
                  SizedBox(height: 16),

                  // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                  TextFormField(
                    controller: _titleController,
                    decoration: InputDecoration(
                      labelText: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                        borderSide: BorderSide(
                          color: Colors.grey.withOpacity(0.3),
                          width: 1,
                        ),
                      ),
                      contentPadding: EdgeInsets.all(16),
                    ),
                    style: TextStyle(fontSize: 16),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏';
                      }
                      if (value.length < 10) {
                        return '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤';
                      }
                      return null;
                    },
                  ),
                  SizedBox(height: 16),

                  // –û–ø–∏—Å–∞–Ω–∏–µ
                  TextFormField(
                    controller: _descriptionController,
                    decoration: InputDecoration(
                      labelText: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(12),
                        borderSide: BorderSide(
                          color: Colors.grey.withOpacity(0.3),
                          width: 1,
                        ),
                      ),
                      contentPadding: EdgeInsets.all(16),
                    ),
                    maxLines: 2,
                    style: TextStyle(fontSize: 16),
                    validator: (value) {
                      if (value == null || value.isEmpty) {
                        return '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏';
                      }
                      if (value.length < 20) {
                        return '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤';
                      }
                      return null;
                    },
                  ),
                  SizedBox(height: 16),

                  // –ö–æ–Ω—Ç–µ–Ω—Ç
                  Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: [
                      TextFormField(
                        controller: _contentController,
                        decoration: InputDecoration(
                          labelText: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
                          border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(12),
                            borderSide: BorderSide(
                              color: Colors.grey.withOpacity(0.3),
                              width: 1,
                            ),
                          ),
                          contentPadding: EdgeInsets.all(16),
                        ),
                        maxLines: 6,
                        style: TextStyle(fontSize: 16),
                        onChanged: (value) {
                          setState(() {
                            _charCount = value.length;
                          });
                        },
                        validator: (value) {
                          if (value == null || value.isEmpty) {
                            return '–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏';
                          }
                          if (value.length < 560) {
                            return '–°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 560 —Å–∏–º–≤–æ–ª–æ–≤';
                          }
                          return null;
                        },
                      ),
                      SizedBox(height: 8),
                      Row(
                        children: [
                          Expanded(
                            child: LinearProgressIndicator(
                              value: _charCount / 560,
                              backgroundColor: Colors.grey[300],
                              color: _charCount >= 560 ? Colors.green : Theme.of(context).colorScheme.primary,
                              borderRadius: BorderRadius.circular(2),
                            ),
                          ),
                          SizedBox(width: 12),
                          Text(
                            '$_charCount/560',
                            style: TextStyle(
                              fontSize: 12,
                              color: Colors.grey[600],
                            ),
                          ),
                        ],
                      ),
                    ],
                  ),
                  SizedBox(height: 24),

                  // –ö–Ω–æ–ø–∫–∏
                  Row(
                    mainAxisAlignment: MainAxisAlignment.end,
                    children: [
                      TextButton(
                        onPressed: () => Navigator.pop(context),
                        style: TextButton.styleFrom(
                          padding: EdgeInsets.symmetric(horizontal: 24, vertical: 12),
                        ),
                        child: Text('–û—Ç–º–µ–Ω–∞'),
                      ),
                      SizedBox(width: 12),
                      ElevatedButton(
                        onPressed: () {
                          if (_formKey.currentState!.validate()) {
                            final newArticle = Article(
                              id: DateTime.now().millisecondsSinceEpoch.toString(),
                              title: _titleController.text,
                              description: _descriptionController.text,
                              emoji: _selectedEmoji,
                              content: _contentController.text,
                              views: 0,
                              likes: 0,
                              publishDate: DateTime.now(),
                              category: _selectedCategory,
                              author: widget.userName,
                              imageUrl: _imageUrlController.text,
                            );

                            widget.onArticleAdded(newArticle);
                            Navigator.pop(context);

                            ScaffoldMessenger.of(context).showSnackBar(
                              SnackBar(
                                content: Text('–°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!'),
                                backgroundColor: Colors.green,
                                behavior: SnackBarBehavior.floating,
                                shape: RoundedRectangleBorder(
                                  borderRadius: BorderRadius.circular(12),
                                ),
                              ),
                            );
                          }
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: Theme.of(context).colorScheme.primary,
                          foregroundColor: Colors.white,
                          padding: EdgeInsets.symmetric(horizontal: 24, vertical: 12),
                          shape: RoundedRectangleBorder(
                            borderRadius: BorderRadius.circular(12),
                          ),
                        ),
                        child: Text('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'),
                      ),
                    ],
                  ),
                ],
              ),
            ),
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    _titleController.dispose();
    _descriptionController.dispose();
    _contentController.dispose();
    _imageUrlController.dispose();
    super.dispose();
  }
}