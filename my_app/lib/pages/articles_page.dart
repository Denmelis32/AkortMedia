// lib/pages/articles_page.dart
import 'package:flutter/material.dart';
import 'article_detail_page.dart';

// –ú–æ–¥–µ–ª—å –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å—Ç–∞—Ç—å–∏
class Article {
  final String id;
  final String title;
  final String description;
  final String emoji;
  final String content;
  final int views;
  final int likes;
  final DateTime publishDate;
  final String category;
  final String author;

  Article({
    required this.id,
    required this.title,
    required this.description,
    required this.emoji,
    required this.content,
    required this.views,
    required this.likes,
    required this.publishDate,
    required this.category,
    required this.author,
  });

  String get formattedDate {
    final now = DateTime.now();
    final difference = now.difference(publishDate);

    if (difference.inDays > 365) {
      return '${(difference.inDays / 365).floor()}–≥ –Ω–∞–∑–∞–¥';
    } else if (difference.inDays > 30) {
      return '${(difference.inDays / 30).floor()}–º–µ—Å –Ω–∞–∑–∞–¥';
    } else if (difference.inDays > 0) {
      return '${difference.inDays}–¥ –Ω–∞–∑–∞–¥';
    } else if (difference.inHours > 0) {
      return '${difference.inHours}—á –Ω–∞–∑–∞–¥';
    } else {
      return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    }
  }
}

class ArticlesPage extends StatefulWidget {
  final String userName;
  final String userEmail;
  final VoidCallback onLogout;

  const ArticlesPage({
    super.key,
    required this.userName,
    required this.userEmail,
    required this.onLogout,
  });

  @override
  State<ArticlesPage> createState() => _ArticlesPageState();
}

class _ArticlesPageState extends State<ArticlesPage> {
  final List<Article> _articles = [
    Article(
      id: '1',
      title: '–¢–∞–∫—Ç–∏–∫–∞ –∏–≥—Ä—ã –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏',
      description: '–ê–Ω–∞–ª–∏–∑ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã –≤ —Å–µ–∑–æ–Ω–µ 2024/2025',
      emoji: 'üìä',
      content: '''
# –¢–∞–∫—Ç–∏–∫–∞ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã

## –í–≤–µ–¥–µ–Ω–∏–µ
–ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Ñ—É—Ç–±–æ–ª–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–∞—Ç–æ—Ä—Å–∫–∏–º —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ—à–µ–Ω–∏—è–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã. –í —Å–µ–∑–æ–Ω–µ 2024/2025 –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

## –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ö–µ–º–∞
–ì–≤–∞—Ä–¥–∏–æ–ª–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±–∫—É—é —Å—Ö–µ–º—É 4-3-3, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ 3-2-4-1 –ø—Ä–∏ –∞—Ç–∞–∫–µ. –ó–∞–¥–Ω–∏–µ –∑–∞—â–∏—Ç–Ω–∏–∫–∏ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä, –ø–æ–∑–≤–æ–ª—è—è –∫—Ä–∞–π–Ω–∏–º –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –≤—ã—Å–æ–∫–æ –ø–æ —Ñ–ª–∞–Ω–≥–∞–º.

## –ö–ª—é—á–µ–≤—ã–µ innovations
- **–ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–∞—Ç–µ—Ä–∞–ª–∏**: –ö–∞–º–≤–∏–Ω –∏ –£–æ–∫–µ—Ä —á–∞—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä –ø–æ–ª—è
- **–õ–æ–∂–Ω–∞—è –¥–µ–≤—è—Ç–∫–∞**: –•–æ–ª–∞–Ω–Ω–¥ –æ—Ç—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é –ø–ª–µ–π–º–µ–π–∫–µ—Ä–∞
- **–í—ã—Å–æ–∫–∏–π –ø—Ä–µ—Å—Å–∏–Ω–≥**: –ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∞–≤–∏—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ—Ç–µ—Ä–∏ –º—è—á–∞

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
–¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –≥–∏–±–∫–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–º –∫–æ–∑—ã—Ä–µ–º –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –≤ –±–æ—Ä—å–±–µ –∑–∞ —Ç–∏—Ç—É–ª—ã.
''',
      views: 1250,
      likes: 345,
      publishDate: DateTime.now().subtract(const Duration(days: 2)),
      category: '–¢–∞–∫—Ç–∏–∫–∞',
      author: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
    ),
    Article(
      id: '2',
      title: '–õ—É—á—à–∏–µ –º–æ–ª–æ–¥—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã',
      description: '–û–±–∑–æ—Ä —Å–∞–º—ã—Ö –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–ª–æ–¥—ã—Ö —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤ –ï–≤—Ä–æ–ø—ã',
      emoji: '‚≠ê',
      content: '''
# –õ—É—á—à–∏–µ –º–æ–ª–æ–¥—ã–µ —Ç–∞–ª–∞–Ω—Ç—ã –ï–≤—Ä–æ–ø—ã 2024

## 1. –î–∂—É–¥ –ë–µ–ª–ª–∏–Ω–≥–µ–º (–†–µ–∞–ª –ú–∞–¥—Ä–∏–¥)
–í –≤–æ–∑—Ä–∞—Å—Ç–µ 20 –ª–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ø–æ—Ä–∞–∂–∞—Ç—å —Å–≤–æ–µ–π –∑—Ä–µ–ª–æ—Å—Ç—å—é –∏ –≤–ª–∏—è–Ω–∏–µ–º –Ω–∞ –∏–≥—Ä—É.

## 2. –î–∂–µ—Ä–µ–º–∏ –î–æ–∫—É (–ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏)
–ì–æ–ª–ª–∞–Ω–¥—Å–∫–∏–π –≤–∏–Ω–≥–µ—Ä –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å –∏ –¥—Ä–∏–±–ª–∏–Ω–≥.

## 3. –ì–∞–≤–∏ (–ë–∞—Ä—Å–µ–ª–æ–Ω–∞)
–ò—Å–ø–∞–Ω—Å–∫–∏–π –≤—É–Ω–¥–µ—Ä–∫–∏–Ω–¥ —É–∂–µ —Å—Ç–∞–ª –∫–ª—é—á–µ–≤—ã–º –∏–≥—Ä–æ–∫–æ–º –≤ –ë–∞—Ä—Å–µ–ª–æ–Ω–µ –∏ —Å–±–æ—Ä–Ω–æ–π –ò—Å–ø–∞–Ω–∏–∏.

## –í—ã–≤–æ–¥—ã
–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π —Ñ—É—Ç–±–æ–ª –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–æ–∂–¥–∞—Ç—å —Ç–∞–ª–∞–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å–∫–æ—Ä–æ —Å—Ç–∞–Ω—É—Ç –Ω–æ–≤—ã–º–∏ —Å—É–ø–µ—Ä–∑–≤–µ–∑–¥–∞–º–∏.
''',
      views: 980,
      likes: 267,
      publishDate: DateTime.now().subtract(const Duration(days: 5)),
      category: '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
      author: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
    ),
    Article(
      id: '3',
      title: '–ò—Å—Ç–æ—Ä–∏—è –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤',
      description: '–û—Ç –∏—Å—Ç–æ–∫–æ–≤ –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–Ω–µ–π –≤–µ–ª–∏–∫–æ–≥–æ —Ç—É—Ä–Ω–∏—Ä–∞',
      emoji: 'üèÜ',
      content: '''
# –ò—Å—Ç–æ—Ä–∏—è –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤ –£–ï–§–ê

## –†–∞–Ω–Ω–∏–µ –≥–æ–¥—ã
–¢—É—Ä–Ω–∏—Ä –±—ã–ª –æ—Å–Ω–æ–≤–∞–Ω –≤ 1955 –≥–æ–¥—É –∫–∞–∫ –ö—É–±–æ–∫ –ï–≤—Ä–æ–ø–µ–π—Å–∫–∏—Ö –ß–µ–º–ø–∏–æ–Ω–æ–≤. –ü–µ—Ä–≤—ã–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–º —Å—Ç–∞–ª –º–∞–¥—Ä–∏–¥—Å–∫–∏–π –†–µ–∞–ª.

## –≠—Ä–∞ –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
- **1950-1960**: –î–æ–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –†–µ–∞–ª –ú–∞–¥—Ä–∏–¥–∞ (5 –ø–æ–¥—Ä—è–¥ —Ç–∏—Ç—É–ª–æ–≤)
- **1970-–µ**: –£—Å–ø–µ—Ö–∏ –∞—è–∫—Å–æ–≤ –∏ –ë–∞–≤–∞—Ä–∏–∏
- **1980-–µ**: –†–∞—Å—Ü–≤–µ—Ç –∞–Ω–≥–ª–∏–π—Å–∫–∏—Ö –∫–ª—É–±–æ–≤

## –°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —ç—Ä–∞
–° 1992 –≥–æ–¥–∞ —Ç—É—Ä–Ω–∏—Ä –±—ã–ª —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞–Ω –≤ –õ–∏–≥—É –ß–µ–º–ø–∏–æ–Ω–æ–≤, —á—Ç–æ –ø—Ä–∏–≤–µ–ª–æ –∫ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –∫–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.

## –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã
–ó–∞–±—ã—Ç—ã–π –≥–æ–ª –ó–∏–¥–∞–Ω–∞ –≤ —Ñ–∏–Ω–∞–ª–µ 2002 –≥–æ–¥–∞, –∫–∞–º–±—ç–∫ –õ–∏–≤–µ—Ä–ø—É–ª—è –≤ 2005 –∏ –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ.
''',
      views: 1560,
      likes: 423,
      publishDate: DateTime.now().subtract(const Duration(days: 1)),
      category: '–ò—Å—Ç–æ—Ä–∏—è',
      author: '–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤',
    ),
  ];

  final List<String> _categories = [
    '–¢–∞–∫—Ç–∏–∫–∞',
    '–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
    '–ò—Å—Ç–æ—Ä–∏—è',
    '–¢—Ä–∞–Ω—Å—Ñ–µ—Ä—ã',
    '–û–±–∑–æ—Ä—ã –º–∞—Ç—á–µ–π',
    '–ò–Ω—Ç–µ—Ä–≤—å—é'
  ];

  final List<String> _emojis = ['üìä', '‚≠ê', 'üèÜ', '‚öΩ', 'üëë', 'üî•', 'üéØ', 'üí´'];

  // –ü–æ–∏—Å–∫ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è
  final TextEditingController _searchController = TextEditingController();
  String _searchQuery = '';
  String _selectedCategory = '–í—Å–µ';

  void _openArticleDetail(Article article) {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => ArticleDetailPage(article: article),
      ),
    );
  }

  void _showAddArticleDialog() {
    showDialog(
      context: context,
      builder: (context) => AddArticleDialog(
        categories: _categories,
        emojis: _emojis,
        onArticleAdded: (newArticle) {
          setState(() {
            _articles.insert(0, newArticle);
          });
        },
        userName: widget.userName,
      ),
    );
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç–µ–π
  List<Article> get _filteredArticles {
    return _articles.where((article) {
      final matchesSearch = _searchQuery.isEmpty ||
          article.title.toLowerCase().contains(_searchQuery.toLowerCase()) ||
          article.description.toLowerCase().contains(_searchQuery.toLowerCase());

      final matchesCategory = _selectedCategory == '–í—Å–µ' ||
          article.category == _selectedCategory;

      return matchesSearch && matchesCategory;
    }).toList();
  }

  void _showFilterBottomSheet() {
    showModalBottomSheet(
      context: context,
      builder: (context) => Container(
        padding: EdgeInsets.all(16),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            Text('–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º', style: TextStyle(fontSize: 18, fontWeight: FontWeight.bold)),
            SizedBox(height: 16),
            Wrap(
              spacing: 8,
              runSpacing: 8,
              children: [
                _buildCategoryChip('–í—Å–µ'),
                ..._categories.map((category) => _buildCategoryChip(category)),
              ],
            ),
            SizedBox(height: 20),
          ],
        ),
      ),
    );
  }

  Widget _buildCategoryChip(String category) {
    return ChoiceChip(
      label: Text(category),
      selected: _selectedCategory == category,
      onSelected: (selected) {
        setState(() {
          _selectedCategory = selected ? category : '–í—Å–µ';
        });
        Navigator.pop(context);
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      floatingActionButton: FloatingActionButton(
        onPressed: _showAddArticleDialog,
        child: Icon(Icons.add),
        tooltip: '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é',
      ),
      body: CustomScrollView(
        slivers: [
          SliverAppBar(
            expandedHeight: 150.0,
            floating: false,
            pinned: true,
            flexibleSpace: FlexibleSpaceBar(
              title: Text(
                '–°—Ç–∞—Ç—å–∏ –æ —Ñ—É—Ç–±–æ–ª–µ',
                style: TextStyle(
                  color: Colors.white,
                  fontSize: 18.0,
                  fontWeight: FontWeight.bold,
                ),
              ),
              background: Container(
                decoration: BoxDecoration(
                  gradient: LinearGradient(
                    begin: Alignment.topLeft,
                    end: Alignment.bottomRight,
                    colors: [Colors.blue[800]!, Colors.blue[600]!],
                  ),
                ),
                child: Padding(
                  padding: const EdgeInsets.only(left: 20, bottom: 16),
                  child: Align(
                    alignment: Alignment.bottomLeft,
                    child: Text(
                      '–ü—Ä–∏–≤–µ—Ç, ${widget.userName}!',
                      style: TextStyle(
                        color: Colors.white,
                        fontSize: 16,
                      ),
                    ),
                  ),
                ),
              ),
            ),
            actions: [
              IconButton(
                icon: Icon(Icons.filter_list),
                onPressed: _showFilterBottomSheet,
                tooltip: '–§–∏–ª—å—Ç—Ä—ã',
              ),
              IconButton(
                icon: Icon(Icons.exit_to_app),
                onPressed: widget.onLogout,
                tooltip: '–í—ã–π—Ç–∏',
              ),
            ],
          ),

          // –ü–æ–∏—Å–∫–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞
          SliverPadding(
            padding: EdgeInsets.all(16),
            sliver: SliverToBoxAdapter(
              child: TextField(
                controller: _searchController,
                decoration: InputDecoration(
                  hintText: '–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π...',
                  prefixIcon: Icon(Icons.search),
                  suffixIcon: _searchQuery.isNotEmpty
                      ? IconButton(
                    icon: Icon(Icons.clear),
                    onPressed: () {
                      setState(() {
                        _searchController.clear();
                        _searchQuery = '';
                      });
                    },
                  )
                      : null,
                  border: OutlineInputBorder(
                    borderRadius: BorderRadius.circular(12),
                  ),
                ),
                onChanged: (value) {
                  setState(() {
                    _searchQuery = value;
                  });
                },
              ),
            ),
          ),

          // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ñ–∏–ª—å—Ç—Ä–æ–≤
          SliverToBoxAdapter(
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: 16),
              child: Row(
                children: [
                  Text(
                    '–§–∏–ª—å—Ç—Ä: ',
                    style: TextStyle(fontWeight: FontWeight.bold),
                  ),
                  Chip(
                    label: Text(_selectedCategory),
                    backgroundColor: Colors.blue[50],
                  ),
                  if (_searchQuery.isNotEmpty) ...[
                    SizedBox(width: 8),
                    Chip(
                      label: Text('–ü–æ–∏—Å–∫: "$_searchQuery"'),
                      backgroundColor: Colors.green[50],
                    ),
                  ],
                ],
              ),
            ),
          ),

          // –ö–æ–Ω—Ç–µ–Ω—Ç —Å—Ç–∞—Ç–µ–π
          _filteredArticles.isEmpty
              ? SliverFillRemaining(
            child: Center(
              child: Column(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.article, size: 64, color: Colors.grey),
                  SizedBox(height: 16),
                  Text(
                    '–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
                    style: TextStyle(fontSize: 18, color: Colors.grey),
                  ),
                  SizedBox(height: 8),
                  Text(
                    '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞',
                    style: TextStyle(color: Colors.grey),
                  ),
                ],
              ),
            ),
          )
              : SliverList(
            delegate: SliverChildBuilderDelegate(
                  (context, index) {
                final article = _filteredArticles[index];
                return Padding(
                  padding: const EdgeInsets.symmetric(
                    horizontal: 16,
                    vertical: 8,
                  ),
                  child: _buildArticleCard(article),
                );
              },
              childCount: _filteredArticles.length,
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildArticleCard(Article article) {
    return Card(
      elevation: 4,
      shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      child: InkWell(
        borderRadius: BorderRadius.circular(16),
        onTap: () => _openArticleDetail(article),
        child: Padding(
          padding: const EdgeInsets.all(20),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Row(
                children: [
                  Container(
                    padding: EdgeInsets.symmetric(horizontal: 12, vertical: 6),
                    decoration: BoxDecoration(
                      color: Colors.blue[50],
                      borderRadius: BorderRadius.circular(12),
                    ),
                    child: Text(
                      article.category,
                      style: TextStyle(
                        color: Colors.blue[800],
                        fontSize: 12,
                        fontWeight: FontWeight.w500,
                      ),
                    ),
                  ),
                  Spacer(),
                  Text(
                    article.emoji,
                    style: TextStyle(fontSize: 24),
                  ),
                ],
              ),
              const SizedBox(height: 12),

              Text(
                article.title,
                style: TextStyle(
                  fontSize: 18,
                  fontWeight: FontWeight.bold,
                  height: 1.2,
                ),
              ),
              const SizedBox(height: 8),

              Text(
                article.description,
                style: TextStyle(
                  fontSize: 14,
                  color: Colors.grey[700],
                  height: 1.4,
                ),
              ),
              const SizedBox(height: 12),

              // –ê–≤—Ç–æ—Ä –∏ –¥–∞—Ç–∞
              Row(
                children: [
                  CircleAvatar(
                    radius: 12,
                    backgroundColor: Colors.blue[100],
                    child: Text(
                      article.author[0],
                      style: TextStyle(fontSize: 10, fontWeight: FontWeight.bold),
                    ),
                  ),
                  SizedBox(width: 8),
                  Text(
                    article.author,
                    style: TextStyle(fontSize: 12, color: Colors.grey[600]),
                  ),
                  Spacer(),
                  Text(
                    article.formattedDate,
                    style: TextStyle(fontSize: 12, color: Colors.grey[500]),
                  ),
                ],
              ),
              const SizedBox(height: 12),

              // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
              Row(
                children: [
                  _buildStatIconText(Icons.visibility_outlined, '${article.views}'),
                  SizedBox(width: 16),
                  _buildStatIconText(Icons.favorite_border, '${article.likes}'),
                  Spacer(),
                  Icon(Icons.comment, size: 16, color: Colors.grey),
                  SizedBox(width: 4),
                  Text('12', style: TextStyle(color: Colors.grey[600], fontSize: 12)),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildStatIconText(IconData icon, String text) {
    return Row(
      children: [
        Icon(icon, size: 16, color: Colors.grey),
        SizedBox(width: 4),
        Text(
          text,
          style: TextStyle(color: Colors.grey[600], fontSize: 12),
        ),
      ],
    );
  }
}

// –î–∏–∞–ª–æ–≥ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π —Å—Ç–∞—Ç—å–∏
class AddArticleDialog extends StatefulWidget {
  final List<String> categories;
  final List<String> emojis;
  final Function(Article) onArticleAdded;
  final String userName;

  const AddArticleDialog({
    super.key,
    required this.categories,
    required this.emojis,
    required this.onArticleAdded,
    required this.userName,
  });

  @override
  State<AddArticleDialog> createState() => _AddArticleDialogState();
}

class _AddArticleDialogState extends State<AddArticleDialog> {
  final _formKey = GlobalKey<FormState>();
  final TextEditingController _titleController = TextEditingController();
  final TextEditingController _descriptionController = TextEditingController();
  final TextEditingController _contentController = TextEditingController();

  String _selectedCategory = '–¢–∞–∫—Ç–∏–∫–∞';
  String _selectedEmoji = 'üìä';
  int _charCount = 0;

  @override
  Widget build(BuildContext context) {
    return Dialog(
      insetPadding: EdgeInsets.all(16),
      child: Padding(
        padding: EdgeInsets.all(16),
        child: Form(
          key: _formKey,
          child: SingleChildScrollView(
            child: Column(
              mainAxisSize: MainAxisSize.min,
              crossAxisAlignment: CrossAxisAlignment.start,
              children: [
                Text(
                  '–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é —Å—Ç–∞—Ç—å—é',
                  style: TextStyle(fontSize: 20, fontWeight: FontWeight.bold),
                ),
                SizedBox(height: 16),

                // –≠–º–æ–¥–∑–∏ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
                Row(
                  children: [
                    DropdownButton<String>(
                      value: _selectedEmoji,
                      items: widget.emojis.map((emoji) {
                        return DropdownMenuItem(
                          value: emoji,
                          child: Text(emoji, style: TextStyle(fontSize: 24)),
                        );
                      }).toList(),
                      onChanged: (value) {
                        setState(() {
                          _selectedEmoji = value!;
                        });
                      },
                    ),
                    SizedBox(width: 16),
                    Expanded(
                      child: DropdownButtonFormField<String>(
                        value: _selectedCategory,
                        items: widget.categories.map((category) {
                          return DropdownMenuItem(
                            value: category,
                            child: Text(category),
                          );
                        }).toList(),
                        onChanged: (value) {
                          setState(() {
                            _selectedCategory = value!;
                          });
                        },
                        decoration: InputDecoration(
                          labelText: '–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
                          border: OutlineInputBorder(),
                        ),
                      ),
                    ),
                  ],
                ),
                SizedBox(height: 16),

                // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                TextFormField(
                  controller: _titleController,
                  decoration: InputDecoration(
                    labelText: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏',
                    border: OutlineInputBorder(),
                  ),
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return '–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç–∞—Ç—å–∏';
                    }
                    if (value.length < 10) {
                      return '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 10 —Å–∏–º–≤–æ–ª–æ–≤';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 16),

                // –û–ø–∏—Å–∞–Ω–∏–µ
                TextFormField(
                  controller: _descriptionController,
                  decoration: InputDecoration(
                    labelText: '–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ',
                    border: OutlineInputBorder(),
                  ),
                  maxLines: 2,
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return '–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏';
                    }
                    if (value.length < 20) {
                      return '–û–ø–∏—Å–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 20 —Å–∏–º–≤–æ–ª–æ–≤';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 16),

                // –ö–æ–Ω—Ç–µ–Ω—Ç
                TextFormField(
                  controller: _contentController,
                  decoration: InputDecoration(
                    labelText: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏',
                    border: OutlineInputBorder(),
                    counterText: '$_charCount/560 —Å–∏–º–≤–æ–ª–æ–≤',
                  ),
                  maxLines: 6,
                  onChanged: (value) {
                    setState(() {
                      _charCount = value.length;
                    });
                  },
                  validator: (value) {
                    if (value == null || value.isEmpty) {
                      return '–í–≤–µ–¥–∏—Ç–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏';
                    }
                    if (value.length < 560) {
                      return '–°—Ç–∞—Ç—å—è –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 560 —Å–∏–º–≤–æ–ª–æ–≤';
                    }
                    return null;
                  },
                ),
                SizedBox(height: 8),
                LinearProgressIndicator(
                  value: _charCount / 560,
                  backgroundColor: Colors.grey[300],
                  color: _charCount >= 560 ? Colors.green : Colors.blue,
                ),
                SizedBox(height: 16),

                // –ö–Ω–æ–ø–∫–∏
                Row(
                  mainAxisAlignment: MainAxisAlignment.end,
                  children: [
                    TextButton(
                      onPressed: () => Navigator.pop(context),
                      child: Text('–û—Ç–º–µ–Ω–∞'),
                    ),
                    SizedBox(width: 8),
                    ElevatedButton(
                      onPressed: () {
                        if (_formKey.currentState!.validate()) {
                          final newArticle = Article(
                            id: DateTime.now().millisecondsSinceEpoch.toString(),
                            title: _titleController.text,
                            description: _descriptionController.text,
                            emoji: _selectedEmoji,
                            content: _contentController.text,
                            views: 0,
                            likes: 0,
                            publishDate: DateTime.now(),
                            category: _selectedCategory,
                            author: widget.userName,
                          );

                          widget.onArticleAdded(newArticle);
                          Navigator.pop(context);

                          ScaffoldMessenger.of(context).showSnackBar(
                            SnackBar(
                              content: Text('–°—Ç–∞—Ç—å—è —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∞!'),
                              backgroundColor: Colors.green,
                            ),
                          );
                        }
                      },
                      child: Text('–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å'),
                    ),
                  ],
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  @override
  void dispose() {
    _titleController.dispose();
    _descriptionController.dispose();
    _contentController.dispose();
    super.dispose();
  }
}