import 'package:flutter/material.dart';
import 'package:intl/intl.dart';
import '../article_detail_page.dart';
import 'models/article.dart';
import 'widgets/article_card.dart';
import 'widgets/add_article_dialog.dart';

class ArticlesPage extends StatefulWidget {
  final String userName;
  final String userEmail;
  final VoidCallback onLogout;

  const ArticlesPage({
    super.key,
    required this.userName,
    required this.userEmail,
    required this.onLogout,
  });

  @override
  State<ArticlesPage> createState() => _ArticlesPageState();
}

class _ArticlesPageState extends State<ArticlesPage> {
  final List<Article> _articles = [
    Article(
      id: '1',
      title: '–¢–∞–∫—Ç–∏–∫–∞ –∏–≥—Ä—ã –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏',
      description: '–ê–Ω–∞–ª–∏–∑ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å—Ö–µ–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã –≤ —Å–µ–∑–æ–Ω–µ 2024/2025',
      emoji: 'üìä',
      content: '''
# –¢–∞–∫—Ç–∏–∫–∞ –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –ø–æ–¥ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã

## –í–≤–µ–¥–µ–Ω–∏–µ
–ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –¥–æ–º–∏–Ω–∏—Ä–æ–≤–∞—Ç—å –≤ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º —Ñ—É—Ç–±–æ–ª–µ –±–ª–∞–≥–æ–¥–∞—Ä—è –Ω–æ–≤–∞—Ç–æ—Ä—Å–∫–∏–º —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–º —Ä–µ—à–µ–Ω–∏—è–º –ü–µ–ø –ì–≤–∞—Ä–¥–∏–æ–ª—ã. –í —Å–µ–∑–æ–Ω–µ 2024/2025 –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –Ω–æ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.

## –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ö–µ–º–∞
–ì–≤–∞—Ä–¥–∏–æ–ª–∞ —á–∞—â–µ –≤—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –≥–∏–±–∫—É—é —Å—Ö–µ–º—É 4-3-3, –∫–æ—Ç–æ—Ä–∞—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –≤ 3-2-4-1 –ø—Ä–∏ –∞—Ç–∞–∫–µ. –ó–∞–¥–Ω–∏–µ –∑–∞—â–∏—Ç–Ω–∏–∫–∏ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä, –ø–æ–∑–≤–æ–ª—è—è –∫—Ä–∞–π–Ω–∏–º –∑–∞—â–∏—Ç–Ω–∏–∫–∞–º –ø–æ–¥–Ω–∏–º–∞—Ç—å—Å—è –≤—ã—Å–æ–∫–æ –ø–æ —Ñ–ª–∞–Ω–≥–∞–º.

## –ö–ª—é—á–µ–≤—ã–µ innovations
- **–ò–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–∞—Ç–µ—Ä–∞–ª–∏**: –ö–∞–º–≤–∏–Ω –∏ –£–æ–∫–µ—Ä —á–∞—Å—Ç–æ –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –≤ —Ü–µ–Ω—Ç—Ä –ø–æ–ª—è
- **–õ–æ–∂–Ω–∞—è –¥–µ–≤—è—Ç–∫–∞**: –•–æ–ª–∞–Ω–Ω–¥ –æ—Ç—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –ø–æ–∑–∏—Ü–∏—é –ø–ª–µ–π–º–µ–π–∫–µ—Ä–∞
- **–í—ã—Å–æ–∫–∏–π –ø—Ä–µ—Å—Å–∏–Ω–≥**: –ö–æ–º–∞–Ω–¥–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–∞–≤–∏—Ç—å —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –ø–æ—Ç–µ—Ä–∏ –º—è—á–∞

## –ó–∞–∫–ª—é—á–µ–Ω–∏–µ
–¢–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –≥–∏–±–∫–æ—Å—Ç—å –æ—Å—Ç–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–º –∫–æ–∑—ã—Ä–µ–º –ú–∞–Ω—á–µ—Å—Ç–µ—Ä –°–∏—Ç–∏ –≤ –±–æ—Ä—å–±–µ –∑–∞ —Ç–∏—Ç—É–ª—ã.
''',
      views: 1250,
      likes: 345,
      publishDate: DateTime.now().subtract(const Duration(days: 2)),
      category: 'YouTube',
      author: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
      imageUrl: 'https://images.unsplash.com/photo-1596510913920-85d87a1800d2?w=500&h=300&fit=crop',
    ),
    Article(
      id: '2',
      title: '–õ—É—á—à–∏–µ –±–æ–º–±–∞—Ä–¥–∏—Ä—ã –õ–∏–≥–∏ –ß–µ–º–ø–∏–æ–Ω–æ–≤',
      description: '–†–µ–π—Ç–∏–Ω–≥ —Å–∞–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ —Å–µ–∑–æ–Ω–∞ 2024/2025',
      emoji: '‚öΩ',
      content: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ –ª—É—á—à–∏—Ö –±–æ–º–±–∞—Ä–¥–∏—Ä–∞—Ö...',
      views: 890,
      likes: 210,
      publishDate: DateTime.now().subtract(const Duration(days: 5)),
      category: '–ë–∏–∑–Ω–µ—Å',
      author: '–ò–≤–∞–Ω –°–∏–¥–æ—Ä–æ–≤',
      imageUrl: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=500&h=300&fit=crop',
    ),
    Article(
      id: '3',
      title: '–ù–æ–≤—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –≤ —Ñ—É—Ç–±–æ–ª–µ',
      description: '–ö–∞–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –º–µ–Ω—è—é—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ—É—Ç–±–æ–ª',
      emoji: 'üöÄ',
      content: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è—Ö...',
      views: 1560,
      likes: 420,
      publishDate: DateTime.now().subtract(const Duration(days: 3)),
      category: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
      author: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
      imageUrl: 'https://images.unsplash.com/photo-1542831371-29b0f74f9713?w=500&h=300&fit=crop',
    ),
    Article(
      id: '4',
      title: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π',
      description: '–ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ—É—Ç–±–æ–ª–∏—Å—Ç–æ–≤',
      emoji: 'üß†',
      content: '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Å—Ç–∞—Ç—å–∏ –æ –ø—Å–∏—Ö–æ–ª–æ–≥–∏–∏...',
      views: 980,
      likes: 230,
      publishDate: DateTime.now().subtract(const Duration(days: 7)),
      category: '–û–±—â–µ–Ω–∏–µ',
      author: '–ü–µ—Ç—Ä –°–º–∏—Ä–Ω–æ–≤',
      imageUrl: 'https://images.unsplash.com/photo-1545239351-ef35f43d514b?w=500&h=300&fit=crop',
    ),
  ];

  final List<ArticleCategory> _categories = [
    ArticleCategory(
      id: 'all',
      title: '–í—Å–µ',
      icon: Icons.all_inclusive,
      color: Colors.blue,
    ),
    ArticleCategory(
      id: 'youtube',
      title: 'YouTube',
      description: '–û–±—Å—É–∂–¥–µ–Ω–∏–µ –≤–∏–¥–µ–æ –∏ –±–ª–æ–≥–µ—Ä–æ–≤',
      icon: Icons.video_library,
      color: Colors.red,
    ),
    ArticleCategory(
      id: 'business',
      title: '–ë–∏–∑–Ω–µ—Å',
      description: '–°—Ç–∞—Ä—Ç–∞–ø—ã –∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏',
      icon: Icons.business,
      color: Colors.orange,
    ),
    ArticleCategory(
      id: 'games',
      title: '–ò–≥—Ä—ã',
      description: '–ò–≥—Ä–æ–≤–∞—è –∏–Ω–¥—É—Å—Ç—Ä–∏—è',
      icon: Icons.sports_esports,
      color: Colors.purple,
    ),
    ArticleCategory(
      id: 'programming',
      title: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
      description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ IT',
      icon: Icons.code,
      color: Colors.blue,
    ),
    ArticleCategory(
      id: 'sport',
      title: '–°–ø–æ—Ä—Ç',
      description: '–°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Å–æ–±—ã—Ç–∏—è',
      icon: Icons.sports_soccer,
      color: Colors.green,
    ),
    ArticleCategory(
      id: 'communication',
      title: '–û–±—â–µ–Ω–∏–µ',
      description: '–ü—Å–∏—Ö–æ–ª–æ–≥–∏—è –∏ –æ—Ç–Ω–æ—à–µ–Ω–∏—è',
      icon: Icons.chat,
      color: Colors.pink,
    ),
  ];

  final List<String> _emojis = ['üìä', '‚≠ê', 'üèÜ', '‚öΩ', 'üëë', 'üî•', 'üéØ', 'üí´'];

  final TextEditingController _searchController = TextEditingController();
  final ScrollController _tabScrollController = ScrollController();
  int _currentTabIndex = 0;
  String _searchQuery = '';

  @override
  void dispose() {
    _searchController.dispose();
    _tabScrollController.dispose();
    super.dispose();
  }

  void _openArticleDetail(Article article) {
    Navigator.of(context).push(
      MaterialPageRoute(
        builder: (context) => ArticleDetailPage(article: article),
      ),
    );
  }

  void _showAddArticleDialog() {
    showDialog(
      context: context,
      builder: (context) => AddArticleDialog(
        categories: _categories.where((cat) => cat.id != 'all').map((cat) => cat.title).toList(),
        emojis: _emojis,
        onArticleAdded: (newArticle) {
          setState(() {
            _articles.insert(0, newArticle);
          });
        },
        userName: widget.userName,
      ),
    );
  }

  List<Article> _getFilteredArticles(int tabIndex) {
    final selectedCategory = _categories[tabIndex];

    return _articles.where((article) {
      final matchesSearch = _searchQuery.isEmpty ||
          article.title.toLowerCase().contains(_searchQuery.toLowerCase()) ||
          article.description.toLowerCase().contains(_searchQuery.toLowerCase());

      final matchesCategory = selectedCategory.id == 'all' ||
          article.category.toLowerCase() == selectedCategory.title.toLowerCase();

      return matchesSearch && matchesCategory;
    }).toList();
  }

  void _showFilterBottomSheet() {
    showModalBottomSheet(
      context: context,
      backgroundColor: Colors.transparent,
      builder: (context) => Container(
        decoration: BoxDecoration(
          color: Theme.of(context).colorScheme.surface,
          borderRadius: const BorderRadius.only(
            topLeft: Radius.circular(24),
            topRight: Radius.circular(24),
          ),
        ),
        padding: const EdgeInsets.all(24),
        child: Column(
          mainAxisSize: MainAxisSize.min,
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Center(
              child: Container(
                width: 40,
                height: 4,
                decoration: BoxDecoration(
                  color: Colors.grey[300],
                  borderRadius: BorderRadius.circular(2),
                ),
              ),
            ),
            const SizedBox(height: 16),
            Text('–§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
                style: TextStyle(fontSize: 20, fontWeight: FontWeight.w600)),
            const SizedBox(height: 20),
            Wrap(
              spacing: 12,
              runSpacing: 12,
              children: _categories.map((category) => _buildCategoryChip(category)).toList(),
            ),
            const SizedBox(height: 24),
          ],
        ),
      ),
    );
  }

  Widget _buildCategoryChip(ArticleCategory category) {
    final isSelected = _currentTabIndex == _categories.indexOf(category);

    return GestureDetector(
      onTap: () {
        setState(() {
          _currentTabIndex = _categories.indexOf(category);
        });
        Navigator.pop(context);
      },
      child: Container(
        padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 12),
        decoration: BoxDecoration(
          color: isSelected
              ? Theme.of(context).colorScheme.primary
              : Theme.of(context).colorScheme.surfaceVariant,
          borderRadius: BorderRadius.circular(20),
          border: Border.all(
            color: isSelected
                ? Theme.of(context).colorScheme.primary
                : Colors.grey[300]!,
            width: 1,
          ),
        ),
        child: Text(
          category.title,
          style: TextStyle(
            color: isSelected
                ? Colors.white
                : Theme.of(context).colorScheme.onSurfaceVariant,
            fontWeight: FontWeight.w500,
          ),
        ),
      ),
    );
  }

  Widget _buildTabItem(ArticleCategory category, int index) {
    final isSelected = _currentTabIndex == index;

    return GestureDetector(
      onTap: () {
        setState(() {
          _currentTabIndex = index;
        });
      },
      child: Container(
        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 12),
        decoration: BoxDecoration(
          color: isSelected ? Colors.white : Colors.transparent,
          border: Border(
            bottom: BorderSide(
              color: isSelected ? category.color : Colors.transparent,
              width: 3,
            ),
          ),
        ),
        child: Row(
          mainAxisSize: MainAxisSize.min,
          children: [
            Icon(
              category.icon,
              size: 18,
              color: isSelected ? category.color : Colors.grey[600],
            ),
            const SizedBox(width: 8),
            Text(
              category.title,
              style: TextStyle(
                color: isSelected ? Colors.black : Colors.grey[600],
                fontWeight: isSelected ? FontWeight.w600 : FontWeight.normal,
                fontSize: 14,
              ),
            ),
          ],
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      floatingActionButton: FloatingActionButton(
        onPressed: _showAddArticleDialog,
        child: const Icon(Icons.add, size: 24),
        backgroundColor: Theme.of(context).colorScheme.primary,
        foregroundColor: Colors.white,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
        elevation: 4,
        tooltip: '–î–æ–±–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—å—é',
      ),
      body: NestedScrollView(
        headerSliverBuilder: (context, innerBoxIsScrolled) {
          return [
            // –ó–∞–≥–æ–ª–æ–≤–æ–∫ "–°—Ç–∞—Ç—å–∏" –≤–≤–µ—Ä—Ö—É - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
            SliverAppBar(
              expandedHeight: 100.0,
              floating: false,
              pinned: true,
              backgroundColor: Colors.white,
              title: Text(
                '–°—Ç–∞—Ç—å–∏',
                style: TextStyle(
                  color: Colors.black,
                  fontSize: 20.0,
                  fontWeight: FontWeight.w600,
                ),
              ),
              centerTitle: false,
              bottom: PreferredSize(
                preferredSize: const Size.fromHeight(48),
                child: ColoredBox(
                  color: Colors.white,
                  child: SingleChildScrollView(
                    controller: _tabScrollController,
                    scrollDirection: Axis.horizontal,
                    child: Row(
                      children: _categories.asMap().entries.map((entry) {
                        final index = entry.key;
                        final category = entry.value;
                        return _buildTabItem(category, index);
                      }).toList(),
                    ),
                  ),
                ),
              ),
              actions: [
                IconButton(
                  icon: Icon(Icons.filter_list_rounded,
                      size: 24,
                      color: Colors.grey[700]),
                  onPressed: _showFilterBottomSheet,
                  tooltip: '–§–∏–ª—å—Ç—Ä—ã',
                ),
              ],
            ),

            SliverPadding(
              padding: const EdgeInsets.all(20),
              sliver: SliverToBoxAdapter(
                child: Container(
                  decoration: BoxDecoration(
                    borderRadius: BorderRadius.circular(14),
                    boxShadow: [
                      BoxShadow(
                        color: Colors.black.withOpacity(0.1),
                        blurRadius: 10,
                        offset: const Offset(0, 4),
                      ),
                    ],
                  ),
                  child: TextField(
                    controller: _searchController,
                    decoration: InputDecoration(
                      hintText: '–ü–æ–∏—Å–∫ —Å—Ç–∞—Ç–µ–π...',
                      prefixIcon: const Icon(Icons.search_rounded, size: 22),
                      suffixIcon: _searchQuery.isNotEmpty
                          ? IconButton(
                        icon: const Icon(Icons.clear_rounded, size: 22),
                        onPressed: () {
                          setState(() {
                            _searchController.clear();
                            _searchQuery = '';
                          });
                        },
                      )
                          : null,
                      filled: true,
                      fillColor: Theme.of(context).colorScheme.surface,
                      border: OutlineInputBorder(
                        borderRadius: BorderRadius.circular(14),
                        borderSide: BorderSide.none,
                      ),
                      contentPadding: const EdgeInsets.symmetric(vertical: 16, horizontal: 20),
                    ),
                    onChanged: (value) {
                      setState(() {
                        _searchQuery = value;
                      });
                    },
                  ),
                ),
              ),
            ),

            SliverToBoxAdapter(
              child: Padding(
                padding: const EdgeInsets.symmetric(horizontal: 20, vertical: 8),
                child: Wrap(
                  spacing: 8,
                  runSpacing: 8,
                  children: [
                    if (_currentTabIndex != 0)
                      Container(
                        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                        decoration: BoxDecoration(
                          color: Theme.of(context).colorScheme.primary.withOpacity(0.1),
                          borderRadius: BorderRadius.circular(12),
                          border: Border.all(
                            color: Theme.of(context).colorScheme.primary.withOpacity(0.3),
                            width: 1,
                          ),
                        ),
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Text(
                              '–ö–∞—Ç–µ–≥–æ—Ä–∏—è: ',
                              style: TextStyle(
                                fontSize: 12,
                                color: Theme.of(context).colorScheme.onSurfaceVariant,
                              ),
                            ),
                            Text(
                              _categories[_currentTabIndex].title,
                              style: TextStyle(
                                fontSize: 12,
                                fontWeight: FontWeight.w600,
                                color: Theme.of(context).colorScheme.primary,
                              ),
                            ),
                            const SizedBox(width: 4),
                            GestureDetector(
                              onTap: () {
                                setState(() {
                                  _currentTabIndex = 0;
                                });
                              },
                              child: const Icon(Icons.close_rounded, size: 14),
                            ),
                          ],
                        ),
                      ),
                    if (_searchQuery.isNotEmpty)
                      Container(
                        padding: const EdgeInsets.symmetric(horizontal: 16, vertical: 8),
                        decoration: BoxDecoration(
                          color: Colors.green.withOpacity(0.1),
                          borderRadius: BorderRadius.circular(12),
                          border: Border.all(
                            color: Colors.green.withOpacity(0.3),
                            width: 1,
                          ),
                        ),
                        child: Row(
                          mainAxisSize: MainAxisSize.min,
                          children: [
                            Text(
                              '–ü–æ–∏—Å–∫: ',
                              style: TextStyle(
                                fontSize: 12,
                                color: Theme.of(context).colorScheme.onSurfaceVariant,
                              ),
                            ),
                            Text(
                              '"$_searchQuery"',
                              style: TextStyle(
                                fontSize: 12,
                                fontWeight: FontWeight.w600,
                                color: Colors.green[700],
                              ),
                            ),
                            const SizedBox(width: 4),
                            GestureDetector(
                              onTap: () {
                                setState(() {
                                  _searchController.clear();
                                  _searchQuery = '';
                                });
                              },
                              child: const Icon(Icons.close_rounded, size: 14),
                            ),
                          ],
                        ),
                      ),
                  ],
                ),
              ),
            ),
          ];
        },
        body: IndexedStack(
          index: _currentTabIndex,
          children: _categories.asMap().entries.map((entry) {
            final index = entry.key;
            return _CategoryContentBuilder(
              tabIndex: index,
              currentTabIndex: _currentTabIndex,
              getFilteredArticles: _getFilteredArticles,
            );
          }).toList(),
        ),
      ),
    );
  }
}

class _CategoryContentBuilder extends StatelessWidget {
  final int tabIndex;
  final int currentTabIndex;
  final List<Article> Function(int) getFilteredArticles;

  const _CategoryContentBuilder({
    required this.tabIndex,
    required this.currentTabIndex,
    required this.getFilteredArticles,
  });

  @override
  Widget build(BuildContext context) {
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
    if (tabIndex != currentTabIndex) {
      return Container(); // –ü—É—Å—Ç–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∫–ª–∞–¥–∫–∏
    }

    final filteredArticles = getFilteredArticles(tabIndex);

    return filteredArticles.isEmpty
        ? Center(
      child: Column(
        mainAxisAlignment: MainAxisAlignment.center,
        children: [
          Icon(Icons.article_rounded, size: 64, color: Colors.grey[400]),
          const SizedBox(height: 20),
          Text(
            '–°—Ç–∞—Ç—å–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
            style: TextStyle(
              fontSize: 18,
              fontWeight: FontWeight.w500,
              color: Colors.grey[600],
            ),
          ),
          const SizedBox(height: 8),
          Text(
            '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞',
            style: TextStyle(
              color: Colors.grey[500],
            ),
          ),
        ],
      ),
    )
        : GridView.builder(
      padding: const EdgeInsets.all(16),
      gridDelegate: const SliverGridDelegateWithFixedCrossAxisCount(
        crossAxisCount: 2,
        crossAxisSpacing: 16,
        mainAxisSpacing: 16,
        childAspectRatio: 0.7,
      ),
      itemCount: filteredArticles.length,
      itemBuilder: (context, index) {
        final article = filteredArticles[index];
        return ArticleCard(
          article: article,
          onTap: () {
            Navigator.of(context).push(
              MaterialPageRoute(
                builder: (context) => ArticleDetailPage(article: article),
              ),
            );
          },
        );
      },
    );
  }
}

// –ú–æ–¥–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å—Ç–∞—Ç–µ–π —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
class ArticleCategory {
  final String id;
  final String title;
  final String? description;
  final IconData icon;
  final Color color;

  ArticleCategory({
    required this.id,
    required this.title,
    this.description,
    required this.icon,
    required this.color,
  });
}