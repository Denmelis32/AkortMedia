// utils/channel_utils.dart
import 'package:flutter/material.dart';
import 'channel.dart';

class ChannelUtils {

  // üéØ –°–û–ó–î–ê–ù–ò–ï –ö–ê–ù–ê–õ–ê –ò–ó –î–ê–ù–ù–´–• –ü–û–°–¢–ê –° –û–ë–†–ê–ë–û–¢–ö–û–ô –û–®–ò–ë–û–ö
  static Channel createChannelFromPost(Map<String, dynamic> post, {List<Channel>? availableChannels}) {
    try {
      final channelId = Channel.getChannelIdFromPost(post);
      final channelName = Channel.getChannelNameFromPost(post);

      // –ï—Å–ª–∏ –µ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–∞–Ω–∞–ª—ã, –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ
      if (availableChannels != null && channelId.isNotEmpty) {
        final existingChannel = Channel.findById(availableChannels, channelId);
        if (existingChannel != null && existingChannel.id != 0) {
          return existingChannel;
        }
      }

      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª –∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å—Ç–∞
      return Channel.fromPostData(post);
    } catch (e) {
      print('‚ùå Error creating channel from post: $e');
      return _createFallbackChannel();
    }
  }

  // üÜò –°–û–ó–î–ê–ù–ò–ï FALLBACK –ö–ê–ù–ê–õ–ê
  static Channel _createFallbackChannel() {
    return Channel.simple(
      id: 0,
      title: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∫–∞–Ω–∞–ª',
      description: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞–Ω–∞–ª–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞',
      imageUrl: 'assets/images/ava_news/ava1.png',
      cardColor: Colors.grey,
    );
  }

  // üîç –ü–û–ò–°–ö –ö–ê–ù–ê–õ–ê –í –°–ü–ò–°–ö–ï –ü–û –î–ê–ù–ù–´–ú –ü–û–°–¢–ê
  static Channel? findChannelForPost(Map<String, dynamic> post, List<Channel> channels) {
    final channelId = Channel.getChannelIdFromPost(post);
    if (channelId.isEmpty) return null;

    return Channel.findById(channels, channelId);
  }

  // üé® –ü–û–õ–£–ß–ï–ù–ò–ï –¶–í–ï–¢–ê –î–õ–Ø –ö–ê–ù–ê–õ–ê
  static Color getChannelColor(Channel channel) {
    return channel.cardColor;
  }

  // üñºÔ∏è –ü–û–õ–£–ß–ï–ù–ò–ï –ê–í–ê–¢–ê–†–ö–ò –ö–ê–ù–ê–õ–ê –° FALLBACK
  static String getChannelAvatar(Channel channel) {
    if (channel.imageUrl.isNotEmpty) {
      return channel.imageUrl;
    }

    // Fallback –∞–≤–∞—Ç–∞—Ä–∫–∏ –¥–ª—è –∫–∞–Ω–∞–ª–æ–≤
    final fallbackAvatars = [
      'assets/images/ava_news/ava16.png',
      'assets/images/ava_news/ava17.png',
      'assets/images/ava_news/ava18.png',
    ];

    final index = channel.title.hashCode.abs() % fallbackAvatars.length;
    return fallbackAvatars[index];
  }

  // üìä –§–û–†–ú–ê–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–ê–¢–ò–°–¢–ò–ö–ò –ö–ê–ù–ê–õ–ê
  static String formatChannelStats(Channel channel) {
    return '${channel.formattedSubscribers} –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ ‚Ä¢ ${channel.videos} –ø—É–±–ª–∏–∫–∞—Ü–∏–π';
  }

  // ‚≠ê –ü–û–õ–£–ß–ï–ù–ò–ï –ò–ö–û–ù–ö–ò –í–ï–†–ò–§–ò–ö–ê–¶–ò–ò
  static Widget getVerificationIcon(Channel channel, {double size = 16}) {
    if (channel.isVerified) {
      return Icon(
        Icons.verified,
        color: Colors.blue,
        size: size,
      );
    }
    return const SizedBox.shrink();
  }

  // üîî –ü–†–û–í–ï–†–ö–ê –ü–û–î–ü–ò–°–ö–ò –ù–ê –ö–ê–ù–ê–õ
  static bool isSubscribedToChannel(Channel channel, String userId) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–ø–∏—Å–∫–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–≤–∞–π–¥–µ—Ä
    return channel.isSubscribed;
  }
}