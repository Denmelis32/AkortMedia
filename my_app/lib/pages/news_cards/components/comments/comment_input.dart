// ‚úçÔ∏è –ö–û–ú–ü–û–ù–ï–ù–¢ –ü–û–õ–Ø –í–í–û–î–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
// –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../../../providers/user_provider.dart';
import '../../models/news_card_models.dart';
import '../../utils/image_utils.dart';

class CommentInput extends StatelessWidget {
  final Function(String, String, String) onComment;
  final TextEditingController commentController;
  final CardDesign cardDesign;

  const CommentInput({
    super.key,
    required this.onComment,
    required this.commentController,
    required this.cardDesign,
  });

  @override
  Widget build(BuildContext context) {
    final userProvider = Provider.of<UserProvider>(context, listen: false);

    return Container(
      decoration: BoxDecoration(
        color: Colors.grey[50],
        borderRadius: BorderRadius.circular(20),
        border: Border.all(
          color: Colors.grey[200]!,
          width: 1,
        ),
        boxShadow: [
          BoxShadow(
            color: Colors.black.withOpacity(0.05),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: Row(
        children: [
          // üñºÔ∏è –ê–í–ê–¢–ê–†–ö–ê –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –° –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–û–ô
          ImageUtils.buildUserAvatarWidget(
            context: context,
            userId: userProvider.userId,
            userName: userProvider.userName,
            size: 44,
          ),

          const SizedBox(width: 16),

          // üìù –ü–û–õ–ï –í–í–û–î–ê –¢–ï–ö–°–¢–ê
          Expanded(
            child: TextField(
              controller: commentController,
              style: const TextStyle(color: Colors.black87, fontSize: 15),
              decoration: InputDecoration(
                hintText: '–ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...',
                hintStyle: TextStyle(color: Colors.grey[500]),
                border: InputBorder.none,
                contentPadding: const EdgeInsets.symmetric(horizontal: 16, vertical: 16),
              ),
              onSubmitted: (text) => _handleCommentSubmission(
                context,
                text,
                userProvider.userName,
                userProvider.userId,
              ),
            ),
          ),

          // üì§ –ö–ù–û–ü–ö–ê –û–¢–ü–†–ê–í–ö–ò
          _buildSendButton(
            context,
            userProvider.userName,
            userProvider.userId,
          ),
        ],
      ),
    );
  }

  /// üì§ –°–û–ó–î–ê–ï–¢ –ö–ù–û–ü–ö–£ –û–¢–ü–†–ê–í–ö–ò –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
  Widget _buildSendButton(BuildContext context, String userName, String userId) {
    return Container(
      margin: const EdgeInsets.only(right: 12),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: cardDesign.gradient,
          begin: Alignment.topLeft,
          end: Alignment.bottomRight,
        ),
        borderRadius: BorderRadius.circular(14),
        boxShadow: [
          BoxShadow(
            color: cardDesign.gradient[0].withOpacity(0.4),
            blurRadius: 10,
            offset: const Offset(0, 4),
          ),
        ],
      ),
      child: IconButton(
        icon: const Icon(Icons.send_rounded, color: Colors.white, size: 22),
        onPressed: () => _handleCommentButtonPress(
          context,
          userName,
          userId,
        ),
        padding: const EdgeInsets.all(12),
      ),
    );
  }

  /// üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö –ù–ê–ñ–ê–¢–ò–Ø –ö–ù–û–ü–ö–ò –û–¢–ü–†–ê–í–ö–ò
  void _handleCommentButtonPress(BuildContext context, String userName, String userId) {
    final text = commentController.text.trim();
    if (text.isNotEmpty) {
      _submitComment(context, text, userName, userId);
    }
  }

  /// üéØ –û–ë–†–ê–ë–û–¢–ß–ò–ö –û–¢–ü–†–ê–í–ö–ò –ß–ï–†–ï–ó ENTER
  void _handleCommentSubmission(BuildContext context, String text, String userName, String userId) {
    final trimmedText = text.trim();
    if (trimmedText.isNotEmpty) {
      _submitComment(context, trimmedText, userName, userId);
    }
  }

  /// üì§ –û–¢–ü–†–ê–í–õ–Ø–ï–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ô –ò –ü–û–ö–ê–ó–´–í–ê–ï–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï
  void _submitComment(BuildContext context, String text, String userName, String userId) {
    // –ü–æ–ª—É—á–∞–µ–º URL –∞–≤–∞—Ç–∞—Ä–∫–∏ –¥–ª—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
    final userAvatar = ImageUtils.getUniversalAvatarUrl(
      context: context,
      userId: userId,
      userName: userName,
    );

    // üì§ –í–´–ó–´–í–ê–ï–ú –ö–û–õ–ë–≠–ö
    onComment(text, userName, userAvatar);

    // üßπ –û–ß–ò–©–ê–ï–ú –ü–û–õ–ï –í–í–û–î–ê
    commentController.clear();

    // üîî –ü–û–ö–ê–ó–´–í–ê–ï–ú –£–í–ï–î–û–ú–õ–ï–ù–ò–ï
    _showSuccessSnackBar(context);
  }

  /// üîî –ü–û–ö–ê–ó–´–í–ê–ï–¢ –£–í–ï–î–û–ú–õ–ï–ù–ò–ï –û–ë –£–°–ü–ï–®–ù–û–ô –û–¢–ü–†–ê–í–ö–ï
  void _showSuccessSnackBar(BuildContext context) {
    ScaffoldMessenger.of(context).showSnackBar(
      SnackBar(
        content: Row(
          children: [
            Container(
              width: 24,
              height: 24,
              decoration: BoxDecoration(
                color: Colors.white.withOpacity(0.2),
                borderRadius: BorderRadius.circular(6),
              ),
              child: const Icon(Icons.check_rounded, color: Colors.white, size: 14),
            ),
            const SizedBox(width: 12),
            const Text('–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω'),
          ],
        ),
        backgroundColor: Colors.green,
        duration: const Duration(seconds: 2),
        behavior: SnackBarBehavior.floating,
        shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(16)),
      ),
    );
  }
}