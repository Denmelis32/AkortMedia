// üí¨ –ö–û–ú–ü–û–ù–ï–ù–¢ –û–î–ù–û–ì–û –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
// –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å –∞–≤–∞—Ç–∞—Ä–∫–æ–π, –∏–º–µ–Ω–µ–º –∞–≤—Ç–æ—Ä–∞ –∏ —Ç–µ–∫—Å—Ç–æ–º

import 'package:flutter/material.dart';
import 'package:provider/provider.dart';
import '../../../../providers/user_provider.dart';
import '../../models/news_card_models.dart';
import '../../utils/image_utils.dart';

class CommentItem extends StatelessWidget {
  final Map<String, dynamic> comment;
  final CardDesign cardDesign;

  const CommentItem({
    super.key,
    required this.comment,
    required this.cardDesign,
  });

  @override
  Widget build(BuildContext context) {
    final userProvider = Provider.of<UserProvider>(context, listen: false);

    // üìä –ü–û–õ–£–ß–ê–ï–ú –î–ê–ù–ù–´–ï –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
    final author = _getStringValue(comment['author']);
    final text = _getStringValue(comment['text']);
    final time = _getStringValue(comment['time']);
    final authorAvatar = _getStringValue(comment['author_avatar']);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
    final authorId = _getAuthorId(comment, userProvider);

    return Padding(
      padding: const EdgeInsets.only(bottom: 20),
      child: Row(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          // üñºÔ∏è –ê–í–ê–¢–ê–†–ö–ê –ê–í–¢–û–†–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø –° –£–ù–ò–í–ï–†–°–ê–õ–¨–ù–û–ô –°–ò–°–¢–ï–ú–û–ô
          ImageUtils.buildUserAvatarWidget(
            context: context,
            userId: authorId,
            userName: author,
            size: 44,
          ),

          const SizedBox(width: 16),

          // üìù –°–û–î–ï–†–ñ–ò–ú–û–ï –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
          Expanded(
            child: Container(
              padding: const EdgeInsets.all(20),
              decoration: BoxDecoration(
                color: Colors.grey[50],
                borderRadius: BorderRadius.circular(20),
                border: Border.all(
                  color: Colors.grey[200]!,
                  width: 1,
                ),
                boxShadow: [
                  BoxShadow(
                    color: Colors.black.withOpacity(0.05),
                    blurRadius: 10,
                    offset: const Offset(0, 4),
                  ),
                ],
              ),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  // üë§ –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û–ë –ê–í–¢–û–†–ï –ò –í–†–ï–ú–ï–ù–ò
                  _buildCommentHeader(author, time),

                  const SizedBox(height: 12),

                  // üìù –¢–ï–ö–°–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
                  _buildCommentText(text),
                ],
              ),
            ),
          ),
        ],
      ),
    );
  }

  /// üë§ –°–û–ó–î–ê–ï–¢ –®–ê–ü–ö–£ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
  Widget _buildCommentHeader(String author, String time) {
    return Row(
      children: [
        // üìõ –ò–ú–Ø –ê–í–¢–û–†–ê
        Text(
          author,
          style: const TextStyle(
            fontWeight: FontWeight.w700,
            fontSize: 15,
            color: Colors.black87,
          ),
        ),

        const Spacer(),

        // ‚è∞ –í–†–ï–ú–Ø –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
        Text(
          time,
          style: TextStyle(
            fontSize: 13,
            color: Colors.grey[600],
            fontWeight: FontWeight.w500,
          ),
        ),
      ],
    );
  }

  /// üìù –°–û–ó–î–ê–ï–¢ –¢–ï–ö–°–¢ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
  Widget _buildCommentText(String text) {
    return Text(
      text,
      style: TextStyle(
        fontSize: 15,
        color: Colors.black87.withOpacity(0.8),
        height: 1.4,
      ),
    );
  }

  /// üÜî –ü–û–õ–£–ß–ê–ï–¢ ID –ê–í–¢–û–†–ê –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
  String _getAuthorId(Map<String, dynamic> comment, UserProvider userProvider) {
    final author = _getStringValue(comment['author']);

    // –ï—Å–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ ID
    if (author == userProvider.userName) {
      return userProvider.userId;
    }

    // –î–ª—è –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º ID –∏–∑ –∏–º–µ–Ω–∏
    return 'user_${author.hashCode.abs()}';
  }

  // üéØ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
  String _getStringValue(dynamic value) {
    if (value is String) return value;
    if (value != null) return value.toString();
    return '';
  }
}