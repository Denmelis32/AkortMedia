// üèóÔ∏è –û–°–ù–û–í–ù–´–ï –ú–û–î–ï–õ–ò –î–ê–ù–ù–´–• –î–õ–Ø –ö–û–ú–ü–û–ù–ï–ù–¢–ê –ù–û–í–û–°–¢–ï–ô

import 'package:flutter/material.dart';
import 'news_card_enums.dart';

/// üé® –ú–û–î–ï–õ–¨ –î–ò–ó–ê–ô–ù–ê –ö–ê–†–¢–û–ß–ö–ò
/// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤–∏–∑—É–∞–ª—å–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏: —Ü–≤–µ—Ç–∞, –≥—Ä–∞–¥–∏–µ–Ω—Ç—ã, —Å—Ç–∏–ª–∏
/// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–∏–∑–∞–π–Ω–∞ across –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
class CardDesign {
  final List<Color> gradient;      // üåà –ì—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ [–Ω–∞—á–∞–ª—å–Ω—ã–π, –∫–æ–Ω–µ—á–Ω—ã–π]
  final PatternStyle pattern;      // üî∑ –°—Ç–∏–ª—å –ø–∞—Ç—Ç–µ—Ä–Ω–∞ —Ñ–æ–Ω–∞
  final DecorationStyle decoration; // üé≠ –°—Ç–∏–ª—å –¥–µ–∫–æ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç–æ—á–∫–∏
  final Color accentColor;         // üé® –ê–∫—Ü–µ–Ω—Ç–Ω—ã–π —Ü–≤–µ—Ç –¥–ª—è –∫–Ω–æ–ø–æ–∫, —Ç–µ–≥–æ–≤, –∏–∫–æ–Ω–æ–∫
  final Color backgroundColor;     // üñºÔ∏è –û—Å–Ω–æ–≤–Ω–æ–π —Ü–≤–µ—Ç —Ñ–æ–Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏

  const CardDesign({
    required this.gradient,
    required this.pattern,
    required this.decoration,
    required this.accentColor,
    required this.backgroundColor,
  });

  /// üîÑ –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
  CardDesign copyWith({
    List<Color>? gradient,
    PatternStyle? pattern,
    DecorationStyle? decoration,
    Color? accentColor,
    Color? backgroundColor,
  }) {
    return CardDesign(
      gradient: gradient ?? this.gradient,
      pattern: pattern ?? this.pattern,
      decoration: decoration ?? this.decoration,
      accentColor: accentColor ?? this.accentColor,
      backgroundColor: backgroundColor ?? this.backgroundColor,
    );
  }

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
          other is CardDesign &&
              runtimeType == other.runtimeType &&
              gradient == other.gradient &&
              pattern == other.pattern &&
              decoration == other.decoration &&
              accentColor == other.accentColor &&
              backgroundColor == other.backgroundColor;

  @override
  int get hashCode =>
      gradient.hashCode ^
      pattern.hashCode ^
      decoration.hashCode ^
      accentColor.hashCode ^
      backgroundColor.hashCode;
}

/// üí´ –ú–û–î–ï–õ–¨ –°–û–°–¢–û–Ø–ù–ò–Ø –í–ó–ê–ò–ú–û–î–ï–ô–°–¢–í–ò–ô –° –ü–û–°–¢–û–ú
/// –•—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–∞–π–∫–æ–≤, —Ä–µ–ø–æ—Å—Ç–æ–≤, –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
/// –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ—Ç—Å—è —Å InteractionManager
class PostInteractionState {
  final String postId;             // üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å—Ç–∞
  final bool isLiked;              // ‚ù§Ô∏è –°—Ç–∞—Ç—É—Å –ª–∞–π–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  final bool isBookmarked;         // üîñ –°—Ç–∞—Ç—É—Å –∑–∞–∫–ª–∞–¥–∫–∏ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  final bool isReposted;           // üîÑ –°—Ç–∞—Ç—É—Å —Ä–µ–ø–æ—Å—Ç–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  final int likesCount;            // üî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
  final int repostsCount;          // üî¢ –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ø–æ—Å—Ç–æ–≤
  final List<Map<String, dynamic>> comments; // üí¨ –°–ø–∏—Å–æ–∫ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∫ –ø–æ—Å—Ç—É

  const PostInteractionState({
    required this.postId,
    required this.isLiked,
    required this.isBookmarked,
    required this.isReposted,
    required this.likesCount,
    required this.repostsCount,
    required this.comments,
  });

  /// üîÑ –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
  PostInteractionState copyWith({
    String? postId,
    bool? isLiked,
    bool? isBookmarked,
    bool? isReposted,
    int? likesCount,
    int? repostsCount,
    List<Map<String, dynamic>>? comments,
  }) {
    return PostInteractionState(
      postId: postId ?? this.postId,
      isLiked: isLiked ?? this.isLiked,
      isBookmarked: isBookmarked ?? this.isBookmarked,
      isReposted: isReposted ?? this.isReposted,
      likesCount: likesCount ?? this.likesCount,
      repostsCount: repostsCount ?? this.repostsCount,
      comments: comments ?? this.comments,
    );
  }

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
          other is PostInteractionState &&
              runtimeType == other.runtimeType &&
              postId == other.postId &&
              isLiked == other.isLiked &&
              isBookmarked == other.isBookmarked &&
              isReposted == other.isReposted &&
              likesCount == other.likesCount &&
              repostsCount == other.repostsCount &&
              comments == other.comments;

  @override
  int get hashCode =>
      postId.hashCode ^
      isLiked.hashCode ^
      isBookmarked.hashCode ^
      isReposted.hashCode ^
      likesCount.hashCode ^
      repostsCount.hashCode ^
      comments.hashCode;
}

/// üë§ –ú–û–î–ï–õ–¨ –î–ê–ù–ù–´–• –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø/–ê–í–¢–û–†–ê
/// –°–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≤—Ç–æ—Ä–µ –ø–æ—Å—Ç–∞ –∏–ª–∏ –∫–∞–Ω–∞–ª–µ
class UserData {
  final String id;                 // üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è/–∫–∞–Ω–∞–ª–∞
  final String name;               // üìõ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è
  final String avatarUrl;          // üñºÔ∏è URL –∞–≤–∞—Ç–∞—Ä–∫–∏
  final bool isChannel;            // üì¢ –§–ª–∞–≥ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∫–∞–Ω–∞–ª–æ–º
  final int? subscribersCount;     // üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ (–¥–ª—è –∫–∞–Ω–∞–ª–æ–≤)
  final bool isVerified;           // ‚úÖ –§–ª–∞–≥ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏

  const UserData({
    required this.id,
    required this.name,
    required this.avatarUrl,
    this.isChannel = false,
    this.subscribersCount,
    this.isVerified = false,
  });

  /// üîß –°–æ–∑–¥–∞–µ—Ç –∏–∑ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ—Å—Ç–∏
  factory UserData.fromNews(Map<String, dynamic> news, {bool isOriginal = false}) {
    final prefix = isOriginal ? 'original_' : '';

    return UserData(
      id: news['${prefix}author_id']?.toString() ?? news['${prefix}channel_id']?.toString() ?? '',
      name: news['${prefix}author_name']?.toString() ?? news['${prefix}channel_name']?.toString() ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π',
      avatarUrl: news['${prefix}author_avatar']?.toString() ?? news['${prefix}channel_avatar']?.toString() ?? '',
      isChannel: news['${prefix}is_channel_post'] == true || news['${prefix}channel_id'] != null,
      subscribersCount: news['${prefix}channel_subscribers']?.toInt(),
      isVerified: news['${prefix}is_verified'] == true,
    );
  }
}

/// üè∑Ô∏è –ú–û–î–ï–õ–¨ –ü–ï–†–°–û–ù–ê–õ–¨–ù–û–ì–û –¢–ï–ì–ê
/// –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ç–µ–≥ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ—Å—Ç–æ–≤
class PersonalTag {
  final String id;                 // üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Ç–µ–≥–∞
  final String name;               // üìõ –û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–µ–≥–∞
  final Color color;               // üé® –¶–≤–µ—Ç —Ç–µ–≥–∞
  final TagType type;              // üè∑Ô∏è –¢–∏–ø —Ç–µ–≥–∞
  final DateTime createdAt;        // üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
  final DateTime updatedAt;        // üîÑ –î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  final bool isGlobal;             // üåç –§–ª–∞–≥ –≥–ª–æ–±–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è

  const PersonalTag({
    required this.id,
    required this.name,
    required this.color,
    this.type = TagType.personal,
    required this.createdAt,
    required this.updatedAt,
    this.isGlobal = false,
  });

  /// üîÑ –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
  PersonalTag copyWith({
    String? id,
    String? name,
    Color? color,
    TagType? type,
    DateTime? createdAt,
    DateTime? updatedAt,
    bool? isGlobal,
  }) {
    return PersonalTag(
      id: id ?? this.id,
      name: name ?? this.name,
      color: color ?? this.color,
      type: type ?? this.type,
      createdAt: createdAt ?? this.createdAt,
      updatedAt: updatedAt ?? this.updatedAt,
      isGlobal: isGlobal ?? this.isGlobal,
    );
  }
}

/// üí¨ –ú–û–î–ï–õ–¨ –ö–û–ú–ú–ï–ù–¢–ê–†–ò–Ø
/// –ü—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –ø–æ—Å—Ç—É
class Comment {
  final String id;                 // üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  final String authorId;           // üë§ ID –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  final String authorName;         // üìõ –ò–º—è –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  final String authorAvatar;       // üñºÔ∏è –ê–≤–∞—Ç–∞—Ä –∞–≤—Ç–æ—Ä–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  final String text;               // üìù –¢–µ–∫—Å—Ç –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  final DateTime createdAt;        // üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
  final CommentType type;          // üí¨ –¢–∏–ø –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
  final int likesCount;            // ‚ù§Ô∏è –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª–∞–π–∫–æ–≤
  final bool isLiked;              // üëç –õ–∞–π–∫–Ω—É—Ç –ª–∏ —Ç–µ–∫—É—â–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º

  const Comment({
    required this.id,
    required this.authorId,
    required this.authorName,
    required this.authorAvatar,
    required this.text,
    required this.createdAt,
    this.type = CommentType.regular,
    this.likesCount = 0,
    this.isLiked = false,
  });

  /// üîß –°–æ–∑–¥–∞–µ—Ç –∏–∑ –¥–∞–Ω–Ω—ã—Ö Map
  factory Comment.fromMap(Map<String, dynamic> map) {
    return Comment(
      id: map['id']?.toString() ?? '',
      authorId: map['author_id']?.toString() ?? '',
      authorName: map['author']?.toString() ?? '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π',
      authorAvatar: map['author_avatar']?.toString() ?? '',
      text: map['text']?.toString() ?? '',
      createdAt: DateTime.parse(map['created_at']?.toString() ?? DateTime.now().toString()),
      type: CommentType.values.firstWhere(
            (e) => e.name == map['type'],
        orElse: () => CommentType.regular,
      ),
      likesCount: map['likes_count']?.toInt() ?? 0,
      isLiked: map['is_liked'] == true,
    );
  }

  /// üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ—Ç –≤ Map –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
  Map<String, dynamic> toMap() {
    return {
      'id': id,
      'author_id': authorId,
      'author': authorName,
      'author_avatar': authorAvatar,
      'text': text,
      'created_at': createdAt.toIso8601String(),
      'type': type.name,
      'likes_count': likesCount,
      'is_liked': isLiked,
    };
  }
}

/// üìä –ú–û–î–ï–õ–¨ –î–ê–ù–ù–´–• –ù–û–í–û–°–¢–ò –î–õ–Ø –û–¢–û–ë–†–ê–ñ–ï–ù–ò–Ø
/// –°–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–æ–≤–æ—Å—Ç–∏
class NewsCardData {
  final String id;                         // üÜî –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –Ω–æ–≤–æ—Å—Ç–∏
  final String title;                      // üì∞ –ó–∞–≥–æ–ª–æ–≤–æ–∫ –Ω–æ–≤–æ—Å—Ç–∏
  final String description;                // üìù –¢–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏
  final UserData author;                   // üë§ –î–∞–Ω–Ω—ã–µ –∞–≤—Ç–æ—Ä–∞
  final DateTime createdAt;                // üìÖ –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è
  final bool isChannelPost;                // üì¢ –§–ª–∞–≥ –∫–∞–Ω–∞–ª—å–Ω–æ–≥–æ –ø–æ—Å—Ç–∞
  final bool isRepost;                     // üîÑ –§–ª–∞–≥ —Ä–µ–ø–æ—Å—Ç–∞
  final UserData? repostedBy;              // üîÑ –ö—Ç–æ —Ä–µ–ø–æ—Å—Ç–Ω—É–ª (–¥–ª—è —Ä–µ–ø–æ—Å—Ç–æ–≤)
  final UserData? originalAuthor;          // üë§ –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –∞–≤—Ç–æ—Ä (–¥–ª—è —Ä–µ–ø–æ—Å—Ç–æ–≤)
  final String? repostComment;             // üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Ä–µ–ø–æ—Å—Ç–∞
  final List<String> hashtags;             //#Ô∏è‚É£ –°–ø–∏—Å–æ–∫ —Ö–µ—à—Ç–µ–≥–æ–≤
  final List<PersonalTag> personalTags;    // üè∑Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ —Ç–µ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  final ContentType contentType;           // üìä –¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  final CardDesign cardDesign;             // üé® –î–∏–∑–∞–π–Ω –∫–∞—Ä—Ç–æ—á–∫–∏
  final PostInteractionState interactions; // üí´ –°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–π

  const NewsCardData({
    required this.id,
    required this.title,
    required this.description,
    required this.author,
    required this.createdAt,
    this.isChannelPost = false,
    this.isRepost = false,
    this.repostedBy,
    this.originalAuthor,
    this.repostComment,
    this.hashtags = const [],
    this.personalTags = const [],
    required this.contentType,
    required this.cardDesign,
    required this.interactions,
  });

  /// üîß –°–æ–∑–¥–∞–µ—Ç –∏–∑ —Å—ã—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö Map
  factory NewsCardData.fromMap(Map<String, dynamic> map, {CardDesign? customDesign}) {
    final isRepost = map['is_repost'] == true;
    final author = UserData.fromNews(map);
    final originalAuthor = isRepost ? UserData.fromNews(map, isOriginal: true) : null;
    final repostedBy = isRepost ? UserData(
      id: map['reposted_by_id']?.toString() ?? '',
      name: map['reposted_by_name']?.toString() ?? '',
      avatarUrl: map['reposted_by_avatar']?.toString() ?? '',
    ) : null;

    return NewsCardData(
      id: map['id']?.toString() ?? '',
      title: map['title']?.toString() ?? '',
      description: map['description']?.toString() ?? '',
      author: author,
      createdAt: DateTime.parse(map['created_at']?.toString() ?? DateTime.now().toString()),
      isChannelPost: map['is_channel_post'] == true,
      isRepost: isRepost,
      repostedBy: repostedBy,
      originalAuthor: originalAuthor,
      repostComment: map['repost_comment']?.toString(),
      hashtags: List<String>.from(map['hashtags'] ?? []),
      personalTags: [], // –ó–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑ UserTagsProvider
      contentType: _determineContentType(map),
      cardDesign: customDesign ?? _getCardDesign(map),
      interactions: PostInteractionState(
        postId: map['id']?.toString() ?? '',
        isLiked: map['isLiked'] == true,
        isBookmarked: map['isBookmarked'] == true,
        isReposted: map['isReposted'] == true,
        likesCount: (map['likes'] as num?)?.toInt() ?? 0,
        repostsCount: (map['reposts'] as num?)?.toInt() ?? 0,
        comments: List<Map<String, dynamic>>.from(map['comments'] ?? []),
      ),
    );
  }

  /// üéØ –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞
  static ContentType _determineContentType(Map<String, dynamic> map) {
    final title = (map['title']?.toString() ?? '').toLowerCase();
    final description = (map['description']?.toString() ?? '').toLowerCase();

    if (title.contains('–≤–∞–∂–Ω') || title.contains('—Å—Ä–æ—á–Ω')) return ContentType.important;
    if (title.contains('–Ω–æ–≤–æ—Å—Ç—å') || description.contains('–Ω–æ–≤–æ—Å—Ç—å')) return ContentType.news;
    if (title.contains('—Å–ø–æ—Ä—Ç') || description.contains('—Å–ø–æ—Ä—Ç')) return ContentType.sports;
    if (title.contains('—Ç–µ—Ö–Ω') || description.contains('—Ç–µ—Ö–Ω')) return ContentType.tech;
    if (title.contains('—Ä–∞–∑–≤–ª–µ—á') || description.contains('—Ä–∞–∑–≤–ª–µ—á')) return ContentType.entertainment;
    if (title.contains('–æ–±—Ä–∞–∑–æ–≤–∞–Ω') || description.contains('–æ–±—Ä–∞–∑–æ–≤–∞–Ω')) return ContentType.education;

    return ContentType.general;
  }

  /// üé® –ü–æ–ª—É—á–∞–µ—Ç –¥–∏–∑–∞–π–Ω –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ ID
  static CardDesign _getCardDesign(Map<String, dynamic> map) {
    // TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ª–æ–≥–∏–∫—É –≤—ã–±–æ—Ä–∞ –¥–∏–∑–∞–π–Ω–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –¥–∞–Ω–Ω—ã—Ö
    return _defaultCardDesigns[0];
  }

  /// üîÑ –°–æ–∑–¥–∞–µ—Ç –∫–æ–ø–∏—é —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–æ–ª—è–º–∏
  NewsCardData copyWith({
    String? id,
    String? title,
    String? description,
    UserData? author,
    DateTime? createdAt,
    bool? isChannelPost,
    bool? isRepost,
    UserData? repostedBy,
    UserData? originalAuthor,
    String? repostComment,
    List<String>? hashtags,
    List<PersonalTag>? personalTags,
    ContentType? contentType,
    CardDesign? cardDesign,
    PostInteractionState? interactions,
  }) {
    return NewsCardData(
      id: id ?? this.id,
      title: title ?? this.title,
      description: description ?? this.description,
      author: author ?? this.author,
      createdAt: createdAt ?? this.createdAt,
      isChannelPost: isChannelPost ?? this.isChannelPost,
      isRepost: isRepost ?? this.isRepost,
      repostedBy: repostedBy ?? this.repostedBy,
      originalAuthor: originalAuthor ?? this.originalAuthor,
      repostComment: repostComment ?? this.repostComment,
      hashtags: hashtags ?? this.hashtags,
      personalTags: personalTags ?? this.personalTags,
      contentType: contentType ?? this.contentType,
      cardDesign: cardDesign ?? this.cardDesign,
      interactions: interactions ?? this.interactions,
    );
  }
}

/// üé® –î–ï–§–û–õ–¢–ù–´–ï –î–ò–ó–ê–ô–ù–´ –ö–ê–†–¢–û–ß–ï–ö
const List<CardDesign> _defaultCardDesigns = [
  CardDesign(
    gradient: [Color(0xFF667eea), Color(0xFF764ba2)],
    pattern: PatternStyle.minimal,
    decoration: DecorationStyle.modern,
    accentColor: Color(0xFF667eea),
    backgroundColor: Color(0xFFFAFBFF),
  ),
  CardDesign(
    gradient: [Color(0xFF4facfe), Color(0xFF00f2fe)],
    pattern: PatternStyle.geometric,
    decoration: DecorationStyle.modern,
    accentColor: Color(0xFF4facfe),
    backgroundColor: Color(0xFFF7FDFF),
  ),
  CardDesign(
    gradient: [Color(0xFFfa709a), Color(0xFFfee140)],
    pattern: PatternStyle.geometric,
    decoration: DecorationStyle.modern,
    accentColor: Color(0xFFfa709a),
    backgroundColor: Color(0xFFFFFBF9),
  ),
];