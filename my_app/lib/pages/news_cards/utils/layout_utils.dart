// üéØ –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –†–ê–ë–û–¢–´ –° –†–ê–ó–ú–ï–¢–ö–û–ô –ò –ê–î–ê–ü–¢–ò–í–ù–´–ú –î–ò–ó–ê–ô–ù–û–ú

import 'package:flutter/material.dart';
import '../models/news_card_models.dart';
import '../models/news_card_enums.dart';

/// üé™ –ö–õ–ê–°–° –î–õ–Ø –†–ê–ë–û–¢–´ –° –ê–î–ê–ü–¢–ò–í–ù–û–ô –†–ê–ó–ú–ï–¢–ö–û–ô
/// –°–æ–¥–µ—Ä–∂–∏—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Ä–∞–∑–º–µ—Ä–æ–≤, –æ—Ç—Å—Ç—É–ø–æ–≤ –∏ –¥–µ–∫–æ—Ä–∞—Ü–∏–π
/// –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞ –∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
class LayoutUtils {

  // üì± –ë–†–ï–ô–ö–ü–û–ò–ù–¢–´ –î–õ–Ø –ê–î–ê–ü–¢–ò–í–ù–û–ì–û –î–ò–ó–ê–ô–ù–ê
  static const double mobileBreakpoint = 700;    // üì± –ú–æ–±–∏–ª—å–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
  static const double tabletBreakpoint = 1000;   // üìü –ü–ª–∞–Ω—à–µ—Ç—ã
  static const double desktopBreakpoint = 1400;  // üíª –î–µ—Å–∫—Ç–æ–ø—ã

  /// üìè –ü–û–õ–£–ß–ê–ï–¢ –ì–û–†–ò–ó–û–ù–¢–ê–õ–¨–ù–´–ï –û–¢–°–¢–£–ü–´ –î–õ–Ø –ö–ê–†–¢–û–ß–ö–ò
  /// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç –æ—Ç—Å—Ç—É–ø—ã —Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∏—Ä–∏–Ω—ã —ç–∫—Ä–∞–Ω–∞
  static double getHorizontalPadding(BuildContext context) {
    final width = MediaQuery.of(context).size.width;

    if (width > desktopBreakpoint) return 280;   // üíª –ë–æ–ª—å—à–∏–µ —ç–∫—Ä–∞–Ω—ã - —à–∏—Ä–æ–∫–∏–µ –æ—Ç—Å—Ç—É–ø—ã
    if (width > tabletBreakpoint) return 80;     // üìü –ü–ª–∞–Ω—à–µ—Ç—ã - —Å—Ä–µ–¥–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
    return 0;                                    // üì± –ú–æ–±–∏–ª—å–Ω—ã–µ - –±–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤
  }

  /// üìê –ü–û–õ–£–ß–ê–ï–¢ –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–£–Æ –®–ò–†–ò–ù–£ –ö–û–ù–¢–ï–ù–¢–ê
  /// –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç —à–∏—Ä–∏–Ω—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —á—Ç–µ–Ω–∏—è
  static double getContentMaxWidth(BuildContext context) {
    final width = MediaQuery.of(context).size.width;

    if (width > desktopBreakpoint) return 600;   // üíª –ë–æ–ª—å—à–∏–µ —ç–∫—Ä–∞–Ω—ã - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    if (width > tabletBreakpoint) return 600;    // üìü –ü–ª–∞–Ω—à–µ—Ç—ã - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    if (width > mobileBreakpoint) return 600;    // üì± –ë–æ–ª—å—à–∏–µ –º–æ–±–∏–ª—å–Ω—ã–µ - —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —à–∏—Ä–∏–Ω–∞
    return double.infinity;                      // üì± –ú–æ–±–∏–ª—å–Ω—ã–µ - –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É
  }

  /// üë§ –ü–û–õ–£–ß–ê–ï–¢ –†–ê–ó–ú–ï–† –ê–í–ê–¢–ê–†–ö–ò
  /// –†–∞–∑–º–µ—Ä –∞–≤–∞—Ç–∞—Ä–∫–∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
  static double getAvatarSize(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    return width > mobileBreakpoint ? 40 : 44;   // üì± –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∞–≤–∞—Ç–∞—Ä–∫–∏ —á—É—Ç—å –±–æ–ª—å—à–µ
  }

  /// üì∞ –ü–û–õ–£–ß–ê–ï–¢ –†–ê–ó–ú–ï–† –®–†–ò–§–¢–ê –î–õ–Ø –ó–ê–ì–û–õ–û–í–ö–ê
  /// –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–π —Ä–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —ç–∫—Ä–∞–Ω–∞
  static double getTitleFontSize(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    return width > mobileBreakpoint ? 15 : 15;   // üî§ –ï–¥–∏–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
  }

  /// üìù –ü–û–õ–£–ß–ê–ï–¢ –†–ê–ó–ú–ï–† –®–†–ò–§–¢–ê –î–õ–Ø –û–ü–ò–°–ê–ù–ò–Ø
  static double getDescriptionFontSize(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    return width > mobileBreakpoint ? 15 : 14;   // üî§ –ß—É—Ç—å –º–µ–Ω—å—à–µ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
  }

  /// üé™ –ü–û–õ–£–ß–ê–ï–¢ –†–ê–î–ò–£–° –°–ö–†–£–ì–õ–ï–ù–ò–Ø –ö–ê–†–¢–û–ß–ö–ò
  /// –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–∫–∏ –±–µ–∑ —Å–∫—Ä—É–≥–ª–µ–Ω–∏—è –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ –º–µ—Å—Ç–∞
  static double getCardBorderRadius(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    return width > mobileBreakpoint ? 20.0 : 0.0; // üì± –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö - –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–µ
  }

  /// üì¶ –ü–û–õ–£–ß–ê–ï–¢ –í–ù–ï–®–ù–ò–ï –û–¢–°–¢–£–ü–´ –î–õ–Ø –ö–ê–†–¢–û–ß–ö–ò
  static EdgeInsets getCardMargin(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    final horizontalPadding = getHorizontalPadding(context);

    return EdgeInsets.only(
      left: horizontalPadding,
      right: horizontalPadding,
      bottom: width > mobileBreakpoint ? 20.0 : 0.0, // üì± –ù–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö - –±–µ–∑ –æ—Ç—Å—Ç—É–ø–æ–≤ —Å–Ω–∏–∑—É
    );
  }

  /// üìç –ü–û–õ–£–ß–ê–ï–¢ –í–ù–£–¢–†–ï–ù–ù–ò–ï –û–¢–°–¢–£–ü–´ –î–õ–Ø –ö–û–ù–¢–ï–ù–¢–ê
  static EdgeInsets getContentPadding(BuildContext context) {
    return const EdgeInsets.fromLTRB(20, 16, 20, 20); // üéØ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ç—Å—Ç—É–ø—ã
  }

  /// üìè –ü–û–õ–£–ß–ê–ï–¢ –í–´–°–û–¢–£ –°–ï–ö–¶–ò–ò –¢–ï–ì–û–í
  static double getTagsSectionHeight(BuildContext context) {
    return 28; // üéØ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤—ã—Å–æ—Ç–∞ –¥–ª—è –æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ —Ç–µ–≥–æ–≤
  }

  /// üîç –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –ù–£–ñ–ù–û –õ–ò –ü–û–ö–ê–ó–´–í–ê–¢–¨ –í–ï–†–•–ù–Æ–Æ –õ–ò–ù–ò–Æ
  /// –í–µ—Ä—Ö–Ω—è—è –ª–∏–Ω–∏—è —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
  static bool shouldShowTopLine(BuildContext context) {
    final width = MediaQuery.of(context).size.width;
    return width <= mobileBreakpoint; // üì± –¢–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö
  }

  /// üé® –ü–û–õ–£–ß–ê–ï–¢ –î–ò–ó–ê–ô–ù –ö–ê–†–¢–û–ß–ö–ò –ù–ê –û–°–ù–û–í–ï –î–ê–ù–ù–´–• –ù–û–í–û–°–¢–ò
  /// –í—ã–±–∏—Ä–∞–µ—Ç –¥–∏–∑–∞–π–Ω –∏–∑ –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ ID –Ω–æ–≤–æ—Å—Ç–∏
  static CardDesign getCardDesign(Map<String, dynamic> news) {
    final id = news['id']?.hashCode ?? 0;
    return _cardDesigns[id % _cardDesigns.length];
  }

  /// üìä –û–ü–†–ï–î–ï–õ–Ø–ï–¢ –¢–ò–ü –ö–û–ù–¢–ï–ù–¢–ê –ù–ê –û–°–ù–û–í–ï –¢–ï–ö–°–¢–ê
  static ContentType getContentType(Map<String, dynamic> news) {
    final title = _getStringValue(news['title']).toLowerCase();
    final description = _getStringValue(news['description']).toLowerCase();

    if (title.contains('–≤–∞–∂–Ω') || title.contains('—Å—Ä–æ—á–Ω')) return ContentType.important;
    if (title.contains('–Ω–æ–≤–æ—Å—Ç—å') || description.contains('–Ω–æ–≤–æ—Å—Ç—å')) return ContentType.news;
    if (title.contains('—Å–ø–æ—Ä—Ç') || description.contains('—Å–ø–æ—Ä—Ç')) return ContentType.sports;
    if (title.contains('—Ç–µ—Ö–Ω') || description.contains('—Ç–µ—Ö–Ω')) return ContentType.tech;
    if (title.contains('—Ä–∞–∑–≤–ª–µ—á') || description.contains('—Ä–∞–∑–≤–ª–µ—á')) return ContentType.entertainment;
    if (title.contains('–æ–±—Ä–∞–∑–æ–≤–∞–Ω') || description.contains('–æ–±—Ä–∞–∑–æ–≤–∞–Ω')) return ContentType.education;

    return ContentType.general;
  }

  /// üé® –ü–û–õ–£–ß–ê–ï–¢ –¶–í–ï–¢ –í–´–ë–†–ê–ù–ù–û–ì–û –¢–ï–ì–ê
  static Color getSelectedTagColor(Map<String, dynamic> news, CardDesign cardDesign) {
    if (news['tag_color'] != null) {
      try {
        return Color(news['tag_color']);
      } catch (e) {
        print('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ü–≤–µ—Ç–∞ —Ç–µ–≥–∞: $e');
      }
    }
    return cardDesign.accentColor;
  }

  /// üé™ –°–û–ó–î–ê–ï–¢ –î–ï–ö–û–†–ê–¶–ò–Æ –î–õ–Ø –ö–ê–†–¢–û–ß–ö–ò
  static BoxDecoration getCardDecoration({
    required BuildContext context,
    required CardDesign cardDesign,
    required bool isHovered,
    required bool isRepost,
  }) {
    return BoxDecoration(
      color: cardDesign.backgroundColor,
      borderRadius: BorderRadius.circular(getCardBorderRadius(context)),
      border: isRepost
          ? Border.all(color: Colors.blue.withOpacity(0.3), width: 1.5)
          : null,
      boxShadow: [
        BoxShadow(
          color: Colors.black.withOpacity(isHovered ? 0.15 : 0.08),
          blurRadius: isHovered ? 25 : 16,
          offset: Offset(0, isHovered ? 8 : 4),
          spreadRadius: isHovered ? 1 : 0,
        ),
      ],
    );
  }

  /// üåà –°–û–ó–î–ê–ï–¢ –î–ï–ö–û–†–ê–¢–ò–í–ù–´–ï –≠–õ–ï–ú–ï–ù–¢–´ –î–õ–Ø –ö–ê–†–¢–û–ß–ö–ò
  static List<Widget> buildCardDecorations(CardDesign cardDesign, bool isHovered) {
    return [
      // üîµ –í–ï–†–•–ù–ò–ô –ü–†–ê–í–´–ô –ö–†–£–ì
      Positioned(
        top: -60,
        right: -60,
        child: AnimatedContainer(
          duration: const Duration(milliseconds: 800),
          width: isHovered ? 160 : 120,
          height: isHovered ? 160 : 120,
          decoration: BoxDecoration(
            shape: BoxShape.circle,
            gradient: RadialGradient(
              colors: [
                cardDesign.gradient[0].withOpacity(isHovered ? 0.12 : 0.08),
                cardDesign.gradient[0].withOpacity(0.02),
              ],
              stops: const [0.1, 1.0],
            ),
          ),
        ),
      ),

      // üü£ –ù–ò–ñ–ù–ò–ô –õ–ï–í–´–ô –ö–†–£–ì
      Positioned(
        bottom: -40,
        left: -40,
        child: Container(
          width: 80,
          height: 80,
          decoration: BoxDecoration(
            shape: BoxShape.circle,
            gradient: RadialGradient(
              colors: [
                cardDesign.gradient[1].withOpacity(0.06),
                cardDesign.gradient[1].withOpacity(0.01),
              ],
            ),
          ),
        ),
      ),
    ];
  }

  /// üìè –°–û–ó–î–ê–ï–¢ –í–ï–†–•–ù–Æ–Æ –õ–ò–ù–ò–Æ-–†–ê–ó–î–ï–õ–ò–¢–ï–õ–¨
  static Widget buildTopLine(BuildContext context, CardDesign cardDesign) {
    final isMobile = MediaQuery.of(context).size.width <= mobileBreakpoint;

    return Container(
      height: 1,
      margin: EdgeInsets.only(
        left: isMobile ? (getAvatarSize(context) + 12 + 16) : 0,
        right: isMobile ? 16 : 0,
      ),
      decoration: BoxDecoration(
        gradient: LinearGradient(
          colors: [
            Colors.transparent,
            cardDesign.gradient[0].withOpacity(0.3),
            Colors.transparent,
          ],
        ),
      ),
    );
  }

  /// üî§ –ü–û–õ–£–ß–ê–ï–¢ –ò–ö–û–ù–ö–£ –î–õ–Ø –¢–ò–ü–ê –ö–û–ù–¢–ï–ù–¢–ê
  static IconData getContentIcon(ContentType contentType) {
    switch (contentType) {
      case ContentType.important:
        return Icons.warning_amber_rounded;
      case ContentType.news:
        return Icons.article_rounded;
      case ContentType.sports:
        return Icons.sports_soccer_rounded;
      case ContentType.tech:
        return Icons.memory_rounded;
      case ContentType.entertainment:
        return Icons.movie_rounded;
      case ContentType.education:
        return Icons.school_rounded;
      default:
        return Icons.trending_up_rounded;
    }
  }

  /// üé® –ü–û–õ–£–ß–ê–ï–¢ –¶–í–ï–¢ –î–õ–Ø –¢–ò–ü–ê –ö–û–ù–¢–ï–ù–¢–ê
  static Color getContentColor(ContentType contentType, CardDesign cardDesign) {
    switch (contentType) {
      case ContentType.important:
        return const Color(0xFFE74C3C);
      case ContentType.news:
        return const Color(0xFF3498DB);
      case ContentType.tech:
        return const Color(0xFF9B59B6);
      case ContentType.entertainment:
        return const Color(0xFFE67E22);
      default:
        return cardDesign.accentColor;
    }
  }

  /// üìù –ü–û–õ–£–ß–ê–ï–¢ –¢–ï–ö–°–¢–û–í–û–ï –û–ü–ò–°–ê–ù–ò–ï –¢–ò–ü–ê –ö–û–ù–¢–ï–ù–¢–ê
  static String getContentTypeText(ContentType contentType) {
    switch (contentType) {
      case ContentType.important:
        return '–í–∞–∂–Ω–æ–µ';
      case ContentType.news:
        return '–ù–æ–≤–æ—Å—Ç–∏';
      case ContentType.sports:
        return '–°–ø–æ—Ä—Ç';
      case ContentType.tech:
        return '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏';
      case ContentType.entertainment:
        return '–†–∞–∑–≤–ª–µ—á–µ–Ω–∏—è';
      case ContentType.education:
        return '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ';
      default:
        return '–û–±—â–µ–µ';
    }
  }

  // üéØ –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´
  static String _getStringValue(dynamic value) {
    if (value is String) return value;
    if (value != null) return value.toString();
    return '';
  }

  // üé® –ü–†–ï–î–£–°–¢–ê–ù–û–í–õ–ï–ù–ù–´–ï –î–ò–ó–ê–ô–ù–´ –ö–ê–†–¢–û–ß–ï–ö
  static const List<CardDesign> _cardDesigns = [
    CardDesign(
      gradient: [Color(0xFF667eea), Color(0xFF764ba2)],
      pattern: PatternStyle.minimal,
      decoration: DecorationStyle.modern,
      accentColor: Color(0xFF667eea),
      backgroundColor: Color(0xFFFAFBFF),
    ),
    CardDesign(
      gradient: [Color(0xFF4facfe), Color(0xFF00f2fe)],
      pattern: PatternStyle.geometric,
      decoration: DecorationStyle.modern,
      accentColor: Color(0xFF4facfe),
      backgroundColor: Color(0xFFF7FDFF),
    ),
    CardDesign(
      gradient: [Color(0xFFfa709a), Color(0xFFfee140)],
      pattern: PatternStyle.geometric,
      decoration: DecorationStyle.modern,
      accentColor: Color(0xFFfa709a),
      backgroundColor: Color(0xFFFFFBF9),
    ),
    CardDesign(
      gradient: [Color(0xFF8E2DE2), Color(0xFF4A00E0)],
      pattern: PatternStyle.minimal,
      decoration: DecorationStyle.modern,
      accentColor: Color(0xFF8E2DE2),
      backgroundColor: Color(0xFFFBF7FF),
    ),
    CardDesign(
      gradient: [Color(0xFF3A1C71), Color(0xFFD76D77), Color(0xFFFFAF7B)],
      pattern: PatternStyle.geometric,
      decoration: DecorationStyle.modern,
      accentColor: Color(0xFF3A1C71),
      backgroundColor: Color(0xFFFDF7FB),
    ),
  ];
}